[
  {
    "name": "Front-End",
    "slug": "front-end",
    "description": "Aprenda tudo sobre desenvolvimento Front-End!",
    "tags": "HTML, CSS, JavaScript, Frameworks",
    "modules": [
      {
        "name": "Fundamentos do HTML",
        "description": "Fundamentos do HTML e como criar páginas web.",
        "topics": [
          {
            "name": "Introdução ao HTML",
            "slug": "introducao-html",
            "description": "Compreenda a estrutura básica de uma página HTML.",
            "lessons": [
              {
                "name": "Estrutura Básica",
                "questions": [
                  {
                    "text": "Qual tag é usada para o título de uma página?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "h1",
                    "answers": [
                      { "text": "div" },
                      { "text": "title" },
                      { "text": "header" },
                      { "text": "h1" }
                    ]
                  },
                  {
                    "text": "Qual tag é usada para definir o rodapé de uma página?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "footer",
                    "answers": [
                      { "text": "div" },
                      { "text": "title" },
                      { "text": "footer" },
                      { "text": "h1" }
                    ]
                  },
                  {
                    "text": "Qual tag é usada para um parágrafo??",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "p",
                    "answers": [
                      { "text": "p" },
                      { "text": "span" },
                      { "text": "div" },
                      { "text": "paragraph" }
                    ]
                  },
                  {
                    "text": "Associe a tag HTML com seu uso correspondente.",
                    "type": "MATCH_PAIRS",
                    "answers": [
                      { "text": "<header>", "pairId": 1 },
                      { "text": "Cabeçalho de uma página", "pairId": 1 },
                      { "text": "<footer>", "pairId": 2 },
                      { "text": "Rodapé de uma página", "pairId": 2 },
                      { "text": "<section>", "pairId": 3 },
                      { "text": "Seção de conteúdo", "pairId": 3 },
                      { "text": "<article>", "pairId": 4 },
                      { "text": "Conteúdo independente", "pairId": 4 }
                    ]
                  },
                  {
                    "text": "Associe a tag HTML com seu uso correspondente.",
                    "type": "MATCH_PAIRS",
                    "answers": [
                      { "text": "<body>", "pairId": 1 },
                      { "text": "Conteúdo do documento", "pairId": 1 },
                      { "text": "<span>", "pairId": 2 },
                      { "text": "Elemento inline genérico", "pairId": 2 },
                      { "text": "<aside>", "pairId": 3 },
                      { "text": "Seção lateral", "pairId": 3 },
                      { "text": "<thead>", "pairId": 4 },
                      { "text": "Cabeçalho da tabela", "pairId": 4 }
                    ]
                  },
                  {
                    "text": "Ordene as etapas para incluir um arquivo CSS em um documento HTML.",
                    "type": "ORDER_CORRECTLY",
                    "answers": [
                      { "text": "Crie um arquivo CSS", "order": 1 },
                      {
                        "text": "Link o arquivo CSS no HTML usando a tag <link>",
                        "order": 2
                      },
                      { "text": "Escreva as regras CSS", "order": 3 },
                      { "text": "Exiba o HTML no navegador", "order": 4 }
                    ]
                  },
                  {
                    "text": "Ordene as etapas para adicionar um script JavaScript em um documento HTML.",
                    "type": "ORDER_CORRECTLY",
                    "answers": [
                      { "text": "Crie um arquivo JavaScript", "order": 1 },
                      {
                        "text": "Link o arquivo JavaScript no HTML usando a tag <script>",
                        "order": 2
                      },
                      { "text": "Escreva o código JavaScript", "order": 3 },
                      { "text": "Execute o HTML no navegador", "order": 4 }
                    ]
                  },
                  {
                    "text": "Qual opção abaixo apresenta erro?",
                    "type": "IDENTIFY_ERROR",
                    "correctAnswer": "<img src='image.jpg'>",
                    "answers": [
                      {
                        "text": "<img src='image.jpg' alt='Descrição da imagem'>"
                      },
                      {
                        "text": "<img src='image.jpg'>"
                      },
                      {
                        "text": "<img src='image.jpg' width='200' height='150'>"
                      }
                    ]
                  },
                  {
                    "text": "Qual opção abaixo apresenta erro?",
                    "type": "IDENTIFY_ERROR",
                    "correctAnswer": "<input type='text'>",
                    "answers": [
                      {
                        "text": "<input type='text' name='username'>"
                      },
                      {
                        "text": "<input type='text'>"
                      },
                      {
                        "text": "<input type='email' name='email'>"
                      }
                    ]
                  },
                  {
                    "text": "O atributo __________ é utilizado para especificar o destino do link em HTML.",
                    "type": "COMPLETE_THE_SENTENCE",
                    "correctAnswer": "target",
                    "answers": [
                      { "text": "href" },
                      { "text": "src" },
                      { "text": "target" },
                      { "text": "alt" }
                    ]
                  },
                  {
                    "text": "A tag __________ é utilizada para indicar um rótulo/legenda para um item em uma interface.",
                    "type": "COMPLETE_THE_SENTENCE",
                    "correctAnswer": "label",
                    "answers": [
                      { "text": "label" },
                      { "text": "src" },
                      { "text": "title" },
                      { "text": "alt" }
                    ]
                  },
                  {
                    "text": "A tag <img> no HTML é usada para inserir imagens.",
                    "type": "TRUE_FALSE",
                    "correctAnswer": "Verdadeiro",
                    "answers": [{ "text": "Verdadeiro" }, { "text": "Falso" }]
                  },
                  {
                    "text": "A tag <ol> no HTML é usada para listas desordenadas.",
                    "type": "TRUE_FALSE",
                    "correctAnswer": "Falso",
                    "answers": [{ "text": "Verdadeiro" }, { "text": "Falso" }]
                  },
                  {
                    "text": "O CSS é usado para __________ o visual das páginas web.",
                    "type": "COMPLETE_THE_SENTENCE",
                    "correctAnswer": "estilizar",
                    "answers": [
                      { "text": "modificar" },
                      { "text": "estilizar" },
                      { "text": "manipular" },
                      { "text": "configurar" }
                    ]
                  },
                  {
                    "text": "O atributo 'alt' na tag <img> é usado para __________ a imagem caso ela não seja carregada.",
                    "type": "COMPLETE_THE_SENTENCE",
                    "correctAnswer": "descrever",
                    "answers": [
                      { "text": "ocultar" },
                      { "text": "descrever" },
                      { "text": "substituir" },
                      { "text": "remover" }
                    ]
                  },
                  {
                    "text": "Associe a propriedade CSS com sua função.",
                    "type": "MATCH_PAIRS",
                    "answers": [
                      { "text": "color", "pairId": 1 },
                      { "text": "Define a cor do texto", "pairId": 1 },
                      { "text": "background-color", "pairId": 2 },
                      { "text": "Define a cor de fundo", "pairId": 2 },
                      { "text": "font-size", "pairId": 3 },
                      { "text": "Define o tamanho da fonte", "pairId": 3 },
                      { "text": "margin", "pairId": 4 },
                      {
                        "text": "Define a margem ao redor do elemento",
                        "pairId": 4
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "name": "Elementos Semânticos e Acessibilidade",
            "slug": "elementos-semanticos-acessibilidade",
            "description": "Aprenda sobre elementos semânticos do HTML e como melhorar a acessibilidade das páginas.",
            "lessons": [
              {
                "name": "Elementos Semânticos",
                "questions": [
                  {
                    "text": "Qual tag é usada para definir o cabeçalho de uma página?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "header",
                    "answers": [
                      { "text": "header" },
                      { "text": "section" },
                      { "text": "div" },
                      { "text": "footer" }
                    ]
                  },
                  {
                    "text": "Qual tag é usada para definir uma seção independente de conteúdo?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "article",
                    "answers": [
                      { "text": "article" },
                      { "text": "section" },
                      { "text": "aside" },
                      { "text": "footer" }
                    ]
                  },
                  {
                    "text": "Associe a tag HTML com seu uso correspondente.",
                    "type": "MATCH_PAIRS",
                    "answers": [
                      { "text": "<header>", "pairId": 1 },
                      { "text": "Cabeçalho de uma página", "pairId": 1 },
                      { "text": "<footer>", "pairId": 2 },
                      { "text": "Rodapé de uma página", "pairId": 2 },
                      { "text": "<article>", "pairId": 3 },
                      { "text": "Conteúdo independente", "pairId": 3 },
                      { "text": "<aside>", "pairId": 4 },
                      { "text": "Conteúdo lateral", "pairId": 4 }
                    ]
                  },
                  {
                    "text": "Atributos como 'aria-label' são usados para melhorar __________.",
                    "type": "COMPLETE_THE_SENTENCE",
                    "correctAnswer": "acessibilidade",
                    "answers": [
                      { "text": "acessibilidade" },
                      { "text": "estilo" },
                      { "text": "interatividade" },
                      { "text": "responsividade" }
                    ]
                  },
                  {
                    "text": "A tag <header> é usada para definir a __________ de uma página.",
                    "type": "COMPLETE_THE_SENTENCE",
                    "correctAnswer": "cabeçalho",
                    "answers": [
                      { "text": "cabeçalho" },
                      { "text": "rodapé" },
                      { "text": "seção" },
                      { "text": "corpo" }
                    ]
                  },
                  {
                    "text": "A tag <footer> no HTML é usada para definir o __________ da página.",
                    "type": "TRUE_FALSE",
                    "correctAnswer": "Verdadeiro",
                    "answers": [{ "text": "Verdadeiro" }, { "text": "Falso" }]
                  }
                ]
              },
              {
                "name": "Melhorando a Acessibilidade",
                "questions": [
                  {
                    "text": "Qual atributo é utilizado para fornecer uma descrição alternativa de uma imagem?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "alt",
                    "answers": [
                      { "text": "alt" },
                      { "text": "title" },
                      { "text": "description" },
                      { "text": "desc" }
                    ]
                  },
                  {
                    "text": "Qual tag HTML é usada para associar um rótulo a um campo de formulário?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "label",
                    "answers": [
                      { "text": "label" },
                      { "text": "input" },
                      { "text": "form" },
                      { "text": "fieldset" }
                    ]
                  },
                  {
                    "text": "Associe a tag HTML com seu uso correspondente.",
                    "type": "MATCH_PAIRS",
                    "answers": [
                      { "text": "<label>", "pairId": 1 },
                      {
                        "text": "Rótulo de um campo de formulário",
                        "pairId": 1
                      },
                      { "text": "<input>", "pairId": 2 },
                      { "text": "Campo de entrada de dados", "pairId": 2 },
                      { "text": "<button>", "pairId": 3 },
                      { "text": "Botão para interação", "pairId": 3 },
                      { "text": "<select>", "pairId": 4 },
                      { "text": "Lista de opções", "pairId": 4 }
                    ]
                  },
                  {
                    "text": "Atributos como 'aria-hidden' são usados para __________.",
                    "type": "COMPLETE_THE_SENTENCE",
                    "correctAnswer": "esconder elementos de leitores de tela",
                    "answers": [
                      { "text": "esconder elementos de leitores de tela" },
                      { "text": "modificar o estilo visual" },
                      { "text": "alterar a ordem de navegação" },
                      { "text": "ajustar a cor do fundo" }
                    ]
                  },
                  {
                    "text": "A tag <button> no HTML é usada para criar __________.",
                    "type": "COMPLETE_THE_SENTENCE",
                    "correctAnswer": "botões de interação",
                    "answers": [
                      { "text": "botões de interação" },
                      { "text": "links" },
                      { "text": "campos de entrada" },
                      { "text": "tabelas" }
                    ]
                  },
                  {
                    "text": "O atributo 'alt' na tag <img> é obrigatório para acessibilidade.",
                    "type": "TRUE_FALSE",
                    "correctAnswer": "Verdadeiro",
                    "answers": [{ "text": "Verdadeiro" }, { "text": "Falso" }]
                  }
                ]
              }
            ]
          },
          {
            "name": "Formulários e Entrada de Dados",
            "slug": "formularios-entrada-dados",
            "description": "Aprenda a trabalhar com formulários HTML e diferentes tipos de entrada de dados.",
            "lessons": [
              {
                "name": "Elementos de Formulário",
                "questions": [
                  {
                    "text": "Qual tag HTML é usada para definir um formulário?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "form",
                    "answers": [
                      { "text": "form" },
                      { "text": "input" },
                      { "text": "textarea" },
                      { "text": "button" }
                    ]
                  },
                  {
                    "text": "Qual tipo de input permite ao usuário escolher entre várias opções de forma exclusiva?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "radio",
                    "answers": [
                      { "text": "radio" },
                      { "text": "checkbox" },
                      { "text": "text" },
                      { "text": "date" }
                    ]
                  },
                  {
                    "text": "Associe a tag HTML com seu uso correspondente.",
                    "type": "MATCH_PAIRS",
                    "answers": [
                      { "text": "<form>", "pairId": 1 },
                      { "text": "Define um formulário", "pairId": 1 },
                      { "text": "<input>", "pairId": 2 },
                      { "text": "Elemento para entrada de dados", "pairId": 2 },
                      { "text": "<textarea>", "pairId": 3 },
                      { "text": "Área de texto multilinha", "pairId": 3 },
                      { "text": "<button>", "pairId": 4 },
                      { "text": "Botão de envio", "pairId": 4 }
                    ]
                  },
                  {
                    "text": "O tipo de input 'password' é usado para ocultar __________.",
                    "type": "COMPLETE_THE_SENTENCE",
                    "correctAnswer": "a senha",
                    "answers": [
                      { "text": "a senha" },
                      { "text": "o nome" },
                      { "text": "o endereço" },
                      { "text": "a data" }
                    ]
                  },
                  {
                    "text": "A tag <textarea> é usada para entrada de __________.",
                    "type": "COMPLETE_THE_SENTENCE",
                    "correctAnswer": "texto multilinha",
                    "answers": [
                      { "text": "texto multilinha" },
                      { "text": "data" },
                      { "text": "números" },
                      { "text": "listas" }
                    ]
                  },
                  {
                    "text": "Os formulários HTML podem ser usados para enviar dados para um servidor.",
                    "type": "TRUE_FALSE",
                    "correctAnswer": "Verdadeiro",
                    "answers": [{ "text": "Verdadeiro" }, { "text": "Falso" }]
                  }
                ]
              },
              {
                "name": "Atributos e Validação de Formulários",
                "questions": [
                  {
                    "text": "Qual atributo é utilizado para especificar o endereço do servidor para onde os dados de um formulário serão enviados?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "action",
                    "answers": [
                      { "text": "action" },
                      { "text": "method" },
                      { "text": "target" },
                      { "text": "name" }
                    ]
                  },
                  {
                    "text": "Qual tipo de input é usado para capturar uma data?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "date",
                    "answers": [
                      { "text": "date" },
                      { "text": "text" },
                      { "text": "datetime" },
                      { "text": "time" }
                    ]
                  },
                  {
                    "text": "Associe o atributo do formulário com sua função.",
                    "type": "MATCH_PAIRS",
                    "answers": [
                      { "text": "action", "pairId": 1 },
                      { "text": "Especifica a URL do servidor", "pairId": 1 },
                      { "text": "method", "pairId": 2 },
                      {
                        "text": "Define o método de envio de dados",
                        "pairId": 2
                      },
                      { "text": "required", "pairId": 3 },
                      {
                        "text": "Indica que o campo é obrigatório",
                        "pairId": 3
                      },
                      { "text": "placeholder", "pairId": 4 },
                      {
                        "text": "Texto exibido no campo antes da entrada",
                        "pairId": 4
                      }
                    ]
                  },
                  {
                    "text": "O atributo 'required' em um campo de formulário indica que __________.",
                    "type": "COMPLETE_THE_SENTENCE",
                    "correctAnswer": "o campo é obrigatório",
                    "answers": [
                      { "text": "o campo é obrigatório" },
                      { "text": "o campo é opcional" },
                      { "text": "o campo será desabilitado" },
                      { "text": "o campo terá um valor padrão" }
                    ]
                  },
                  {
                    "text": "A validação de formulários HTML pode ser feita utilizando __________.",
                    "type": "COMPLETE_THE_SENTENCE",
                    "correctAnswer": "atributos como 'required' e 'pattern'",
                    "answers": [
                      { "text": "atributos como 'required' e 'pattern'" },
                      { "text": "JavaScript" },
                      { "text": "CSS" },
                      { "text": "APIs externas" }
                    ]
                  },
                  {
                    "text": "O atributo 'placeholder' no campo de formulário é usado para __________.",
                    "type": "TRUE_FALSE",
                    "correctAnswer": "Verdadeiro",
                    "answers": [{ "text": "Verdadeiro" }, { "text": "Falso" }]
                  }
                ]
              },
              {
                "name": "Botões e Envio de Formulários",
                "questions": [
                  {
                    "text": "Qual tag é usada para criar um botão de envio em um formulário?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "button",
                    "answers": [
                      { "text": "button" },
                      { "text": "submit" },
                      { "text": "input" },
                      { "text": "form" }
                    ]
                  },
                  {
                    "text": "Qual atributo do botão determina o tipo de envio do formulário?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "type",
                    "answers": [
                      { "text": "type" },
                      { "text": "name" },
                      { "text": "value" },
                      { "text": "action" }
                    ]
                  },
                  {
                    "text": "Associe a tag de formulário com sua funcionalidade.",
                    "type": "MATCH_PAIRS",
                    "answers": [
                      { "text": "<button>", "pairId": 1 },
                      {
                        "text": "Cria um botão para o formulário",
                        "pairId": 1
                      },
                      { "text": "<input type='submit'>", "pairId": 2 },
                      { "text": "Cria um botão de envio", "pairId": 2 },
                      { "text": "<input type='reset'>", "pairId": 3 },
                      {
                        "text": "Cria um botão para resetar o formulário",
                        "pairId": 3
                      }
                    ]
                  },
                  {
                    "text": "O tipo 'submit' em um botão envia __________.",
                    "type": "COMPLETE_THE_SENTENCE",
                    "correctAnswer": "os dados do formulário",
                    "answers": [
                      { "text": "os dados do formulário" },
                      { "text": "um e-mail" },
                      { "text": "um arquivo" },
                      { "text": "uma mensagem de erro" }
                    ]
                  },
                  {
                    "text": "Qual tag HTML é usada para criar um campo de senha em um formulário?",
                    "type": "COMPLETE_THE_SENTENCE",
                    "correctAnswer": "<input type='password'>",
                    "answers": [
                      { "text": "<input type='password'>" },
                      { "text": "<input type='text'>" },
                      { "text": "<textarea>" },
                      { "text": "<input type='email'>" }
                    ]
                  },
                  {
                    "text": "O botão de 'reset' em um formulário limpa os campos preenchidos.",
                    "type": "TRUE_FALSE",
                    "correctAnswer": "Verdadeiro",
                    "answers": [{ "text": "Verdadeiro" }, { "text": "Falso" }]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "name": "Fundamentos do CSS",
        "description": "Principais conceitos do CSS, como o Box Model, seletores e layouts.",
        "topics": [
          {
            "name": "Seletores e Propriedades",
            "slug": "seletores-e-propriedades",
            "description": "Aprenda sobre os seletores do CSS, como aplicá-los a elementos e as principais propriedades para estilização.",
            "lessons": [
              {
                "name": "Seletores Básicos",
                "questions": [
                  {
                    "text": "Qual seletor é usado para selecionar todos os elementos de uma página?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "*",
                    "answers": [
                      { "text": "*" },
                      { "text": "div" },
                      { "text": "p" },
                      { "text": "body" }
                    ]
                  },
                  {
                    "text": "Qual seletor é usado para selecionar todos os elementos <p> em um documento HTML?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "p",
                    "answers": [
                      { "text": "p" },
                      { "text": "p, div" },
                      { "text": "p > div" },
                      { "text": ".p" }
                    ]
                  },
                  {
                    "text": "Associe o seletor CSS com seu uso correspondente.",
                    "type": "MATCH_PAIRS",
                    "answers": [
                      { "text": "*", "pairId": 1 },
                      { "text": "Seleciona todos os elementos", "pairId": 1 },
                      { "text": "p", "pairId": 2 },
                      { "text": "Seleciona todos os parágrafos", "pairId": 2 },
                      { "text": ".classe", "pairId": 3 },
                      {
                        "text": "Seleciona todos os elementos com a classe 'classe'",
                        "pairId": 3
                      },
                      { "text": "#id", "pairId": 4 },
                      {
                        "text": "Seleciona o elemento com o id 'id'",
                        "pairId": 4
                      }
                    ]
                  },
                  {
                    "text": "Qual é o seletor CSS correto para aplicar estilo a um elemento com a classe 'container'?",
                    "type": "COMPLETE_THE_SENTENCE",
                    "correctAnswer": ".container",
                    "answers": [
                      { "text": ".container" },
                      { "text": "#container" },
                      { "text": "container" },
                      { "text": "div.container" }
                    ]
                  },
                  {
                    "text": "O seletor de ID é precedido por __________.",
                    "type": "COMPLETE_THE_SENTENCE",
                    "correctAnswer": "#",
                    "answers": [
                      { "text": "#" },
                      { "text": "." },
                      { "text": "*" },
                      { "text": ":" }
                    ]
                  },
                  {
                    "text": "O seletor 'div > p' seleciona __________.",
                    "type": "TRUE_FALSE",
                    "correctAnswer": "Verdadeiro",
                    "answers": [{ "text": "Verdadeiro" }, { "text": "Falso" }]
                  }
                ]
              },
              {
                "name": "Propriedades de Estilo",
                "questions": [
                  {
                    "text": "Qual propriedade é usada para alterar a cor de fundo de um elemento?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "background-color",
                    "answers": [
                      { "text": "background-color" },
                      { "text": "color" },
                      { "text": "border-color" },
                      { "text": "background-image" }
                    ]
                  },
                  {
                    "text": "Qual propriedade CSS altera a cor do texto de um elemento?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "color",
                    "answers": [
                      { "text": "color" },
                      { "text": "font-color" },
                      { "text": "text-color" },
                      { "text": "background-color" }
                    ]
                  },
                  {
                    "text": "Associe a propriedade CSS ao seu efeito correspondente.",
                    "type": "MATCH_PAIRS",
                    "answers": [
                      { "text": "background-color", "pairId": 1 },
                      { "text": "Altera a cor de fundo", "pairId": 1 },
                      { "text": "color", "pairId": 2 },
                      { "text": "Altera a cor do texto", "pairId": 2 },
                      { "text": "border", "pairId": 3 },
                      { "text": "Altera a borda de um elemento", "pairId": 3 },
                      { "text": "font-size", "pairId": 4 },
                      { "text": "Altera o tamanho da fonte", "pairId": 4 }
                    ]
                  },
                  {
                    "text": "Qual é a propriedade CSS para definir o tamanho da fonte de um texto?",
                    "type": "COMPLETE_THE_SENTENCE",
                    "correctAnswer": "font-size",
                    "answers": [
                      { "text": "font-size" },
                      { "text": "text-size" },
                      { "text": "font-family" },
                      { "text": "line-height" }
                    ]
                  },
                  {
                    "text": "A propriedade 'border-radius' serve para __________.",
                    "type": "COMPLETE_THE_SENTENCE",
                    "correctAnswer": "arredondar os cantos de um elemento",
                    "answers": [
                      { "text": "arredondar os cantos de um elemento" },
                      { "text": "definir a cor da borda" },
                      { "text": "aumentar o tamanho do elemento" },
                      { "text": "definir o espaçamento interno do elemento" }
                    ]
                  },
                  {
                    "text": "A propriedade 'padding' altera o __________ de um elemento.",
                    "type": "TRUE_FALSE",
                    "correctAnswer": "Falso",
                    "answers": [{ "text": "Verdadeiro" }, { "text": "Falso" }]
                  }
                ]
              }
            ]
          },
          {
            "name": "Layout e Design Responsivo",
            "slug": "layout-e-design-responsivo",
            "description": "Aprenda sobre como criar layouts flexíveis e responsivos utilizando CSS, incluindo o uso de Flexbox e Grid.",
            "lessons": [
              {
                "name": "Introdução ao Flexbox",
                "questions": [
                  {
                    "text": "Qual propriedade do Flexbox é usada para definir a direção dos itens dentro de um container?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "flex-direction",
                    "answers": [
                      { "text": "flex-direction" },
                      { "text": "flex-wrap" },
                      { "text": "justify-content" },
                      { "text": "align-items" }
                    ]
                  },
                  {
                    "text": "Qual valor da propriedade 'flex-direction' faz com que os itens sejam dispostos de cima para baixo?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "column",
                    "answers": [
                      { "text": "column" },
                      { "text": "row" },
                      { "text": "row-reverse" },
                      { "text": "column-reverse" }
                    ]
                  },
                  {
                    "text": "Associe a propriedade Flexbox com seu efeito correspondente.",
                    "type": "MATCH_PAIRS",
                    "answers": [
                      { "text": "flex-direction", "pairId": 1 },
                      { "text": "Define a direção dos itens", "pairId": 1 },
                      { "text": "justify-content", "pairId": 2 },
                      {
                        "text": "Alinha os itens horizontalmente",
                        "pairId": 2
                      },
                      { "text": "align-items", "pairId": 3 },
                      { "text": "Alinha os itens verticalmente", "pairId": 3 },
                      { "text": "flex-wrap", "pairId": 4 },
                      {
                        "text": "Controla o comportamento de quebra de linha",
                        "pairId": 4
                      }
                    ]
                  },
                  {
                    "text": "Qual valor da propriedade 'justify-content' é usado para alinhar os itens ao centro do container?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "center",
                    "answers": [
                      { "text": "center" },
                      { "text": "space-between" },
                      { "text": "flex-start" },
                      { "text": "space-around" }
                    ]
                  },
                  {
                    "text": "O que a propriedade 'align-items' faz no Flexbox?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "Alinha os itens verticalmente dentro do container.",
                    "answers": [
                      {
                        "text": "Alinha os itens verticalmente dentro do container."
                      },
                      {
                        "text": "Define a direção dos itens dentro do container."
                      },
                      {
                        "text": "Espaça os itens horizontalmente dentro do container."
                      },
                      {
                        "text": "Define a ordem dos itens dentro do container."
                      }
                    ]
                  },
                  {
                    "text": "Qual valor da propriedade 'flex-wrap' permite que os itens quebrem para a próxima linha?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "wrap",
                    "answers": [
                      { "text": "wrap" },
                      { "text": "nowrap" },
                      { "text": "wrap-reverse" },
                      { "text": "initial" }
                    ]
                  },
                  {
                    "text": "A propriedade 'flex' é uma abreviação para quais propriedades?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "flex-grow, flex-shrink, flex-basis",
                    "answers": [
                      { "text": "flex-grow, flex-shrink, flex-basis" },
                      { "text": "flex-direction, flex-wrap" },
                      { "text": "justify-content, align-items" },
                      { "text": "flex-start, flex-end" }
                    ]
                  },
                  {
                    "text": "O valor 'flex-grow' controla __________.",
                    "type": "COMPLETE_THE_SENTENCE",
                    "correctAnswer": "quanto um item deve crescer para preencher o espaço disponível.",
                    "answers": [
                      {
                        "text": "quanto um item deve crescer para preencher o espaço disponível."
                      },
                      {
                        "text": "quanto um item deve encolher quando não houver espaço."
                      },
                      { "text": "a direção dos itens dentro do container." },
                      { "text": "a quantidade de espaço entre os itens." }
                    ]
                  }
                ]
              },
              {
                "name": "Utilizando Grid Layout",
                "questions": [
                  {
                    "text": "Qual propriedade define o número de colunas em um container Grid?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "grid-template-columns",
                    "answers": [
                      { "text": "grid-template-columns" },
                      { "text": "grid-template-rows" },
                      { "text": "grid-column" },
                      { "text": "grid-gap" }
                    ]
                  },
                  {
                    "text": "Qual valor da propriedade 'grid-template-columns' define 3 colunas de igual tamanho?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "repeat(3, 1fr)",
                    "answers": [
                      { "text": "repeat(3, 1fr)" },
                      { "text": "1fr 1fr 1fr" },
                      { "text": "auto" },
                      { "text": "100px 100px 100px" }
                    ]
                  },
                  {
                    "text": "Associe a propriedade Grid Layout com seu efeito correspondente.",
                    "type": "MATCH_PAIRS",
                    "answers": [
                      { "text": "grid-template-columns", "pairId": 1 },
                      {
                        "text": "Define o número de colunas no Grid",
                        "pairId": 1
                      },
                      { "text": "grid-template-rows", "pairId": 2 },
                      {
                        "text": "Define o número de linhas no Grid",
                        "pairId": 2
                      },
                      { "text": "grid-column", "pairId": 3 },
                      {
                        "text": "Define em quais colunas um item será exibido",
                        "pairId": 3
                      },
                      { "text": "grid-gap", "pairId": 4 },
                      {
                        "text": "Define o espaçamento entre os itens",
                        "pairId": 4
                      }
                    ]
                  },
                  {
                    "text": "Qual propriedade controla o espaçamento entre as linhas em um layout Grid?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "grid-row-gap",
                    "answers": [
                      { "text": "grid-row-gap" },
                      { "text": "grid-column-gap" },
                      { "text": "gap" },
                      { "text": "grid-gap" }
                    ]
                  },
                  {
                    "text": "A propriedade 'grid-template-areas' é usada para __________.",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "nomear áreas dentro de um grid",
                    "answers": [
                      { "text": "nomear áreas dentro de um grid" },
                      { "text": "definir a largura das colunas" },
                      { "text": "especificar a altura das linhas" },
                      { "text": "definir o espaçamento entre os itens" }
                    ]
                  },
                  {
                    "text": "O que a propriedade 'grid-column' faz no Grid Layout?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "Define em qual coluna um item deve ser exibido.",
                    "answers": [
                      {
                        "text": "Define em qual coluna um item deve ser exibido."
                      },
                      { "text": "Define a altura de um item no Grid." },
                      { "text": "Alinha os itens horizontalmente." },
                      { "text": "Controla o espaçamento entre as colunas." }
                    ]
                  },
                  {
                    "text": "A propriedade 'grid-auto-flow' controla __________.",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "a forma como os itens são colocados no grid.",
                    "answers": [
                      {
                        "text": "a forma como os itens são colocados no grid."
                      },
                      { "text": "o tamanho das células do grid." },
                      { "text": "o número de colunas do grid." },
                      { "text": "a direção dos itens dentro do grid." }
                    ]
                  },
                  {
                    "text": "O valor 'auto' da propriedade 'grid-template-rows' faz com que __________.",
                    "type": "COMPLETE_THE_SENTENCE",
                    "correctAnswer": "as linhas tenham o tamanho automático com base no conteúdo.",
                    "answers": [
                      {
                        "text": "as linhas tenham o tamanho automático com base no conteúdo."
                      },
                      { "text": "as linhas tenham um tamanho fixo." },
                      { "text": "as colunas sejam automaticamente ajustadas." },
                      { "text": "a largura das colunas seja fixa." }
                    ]
                  }
                ]
              },
              {
                "name": "Design Responsivo com Media Queries",
                "questions": [
                  {
                    "text": "Qual propriedade CSS é usada para aplicar estilos baseados em diferentes tamanhos de tela?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "@media",
                    "answers": [
                      { "text": "@media" },
                      { "text": "screen" },
                      { "text": "min-width" },
                      { "text": "max-width" }
                    ]
                  },
                  {
                    "text": "Qual é o objetivo principal das media queries?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "Aplicar estilos diferentes para diferentes dispositivos e tamanhos de tela.",
                    "answers": [
                      {
                        "text": "Aplicar estilos diferentes para diferentes dispositivos e tamanhos de tela."
                      },
                      { "text": "Ajustar a cor de fundo de um elemento." },
                      {
                        "text": "Definir o tamanho da fonte de forma dinâmica."
                      },
                      { "text": "Ajustar a altura dos elementos no layout." }
                    ]
                  },
                  {
                    "text": "Associe o tipo de media query com sua condição.",
                    "type": "MATCH_PAIRS",
                    "answers": [
                      { "text": "max-width", "pairId": 1 },
                      {
                        "text": "Define um limite máximo de largura de tela",
                        "pairId": 1
                      },
                      { "text": "min-width", "pairId": 2 },
                      {
                        "text": "Define um limite mínimo de largura de tela",
                        "pairId": 2
                      },
                      { "text": "screen", "pairId": 3 },
                      {
                        "text": "Aplica estilos para telas de dispositivos",
                        "pairId": 3
                      },
                      { "text": "print", "pairId": 4 },
                      { "text": "Aplica estilos para impressão", "pairId": 4 }
                    ]
                  },
                  {
                    "text": "Qual é a sintaxe correta para uma media query que aplica um estilo para telas com no máximo 768px de largura?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "@media (max-width: 768px)",
                    "answers": [
                      { "text": "@media (max-width: 768px)" },
                      { "text": "@media 768px" },
                      { "text": "@media (width: 768px)" },
                      { "text": "@media (max-height: 768px)" }
                    ]
                  },
                  {
                    "text": "Qual valor de 'display' é comumente usado para tornar um layout responsivo com Flexbox?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "flex",
                    "answers": [
                      { "text": "flex" },
                      { "text": "block" },
                      { "text": "inline" },
                      { "text": "grid" }
                    ]
                  },
                  {
                    "text": "As media queries podem ser usadas para alterar o layout de um site com base no __________.",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "tamanho da tela",
                    "answers": [
                      { "text": "tamanho da tela" },
                      { "text": "cor de fundo" },
                      { "text": "opacidade" },
                      { "text": "tamanho da fonte" }
                    ]
                  },
                  {
                    "text": "O valor 'min-width' em uma media query é usado para __________.",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "aplicar estilos a dispositivos com largura mínima específica.",
                    "answers": [
                      {
                        "text": "aplicar estilos a dispositivos com largura mínima específica."
                      },
                      {
                        "text": "aplicar estilos a dispositivos com largura máxima específica."
                      },
                      { "text": "alterar a cor de fundo para telas menores." },
                      { "text": "definir a largura de um elemento." }
                    ]
                  },
                  {
                    "text": "Complete a sentença: A media query '@media (min-width: 1024px)' se aplica a __________.",
                    "type": "COMPLETE_THE_SENTENCE",
                    "correctAnswer": "dispositivos com largura de tela igual ou superior a 1024px.",
                    "answers": [
                      {
                        "text": "dispositivos com largura de tela igual ou superior a 1024px."
                      },
                      { "text": "todas as telas menores que 1024px." },
                      { "text": "telas com largura de 768px." },
                      { "text": "dispositivos móveis." }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "name": "Estilização Avançada com CSS",
            "slug": "estilizacao-avancada-com-css",
            "description": "Aprenda técnicas avançadas de estilização em CSS, como animações, transições, sombras e gradientes.",
            "lessons": [
              {
                "name": "Animações CSS",
                "questions": [
                  {
                    "text": "Qual propriedade é usada para definir a duração de uma animação em CSS?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "animation-duration",
                    "answers": [
                      { "text": "animation-duration" },
                      { "text": "animation-delay" },
                      { "text": "transition-duration" },
                      { "text": "animation-timing-function" }
                    ]
                  },
                  {
                    "text": "Qual valor da propriedade 'animation-timing-function' é usado para criar um efeito de aceleração e desaceleração?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "ease-in-out",
                    "answers": [
                      { "text": "ease-in-out" },
                      { "text": "linear" },
                      { "text": "ease" },
                      { "text": "step-start" }
                    ]
                  },
                  {
                    "text": "Associe a propriedade CSS com sua função correspondente.",
                    "type": "MATCH_PAIRS",
                    "answers": [
                      { "text": "animation-name", "pairId": 1 },
                      { "text": "Define o nome da animação", "pairId": 1 },
                      { "text": "animation-duration", "pairId": 2 },
                      { "text": "Define a duração da animação", "pairId": 2 },
                      { "text": "animation-timing-function", "pairId": 3 },
                      {
                        "text": "Define o tipo de transição da animação",
                        "pairId": 3
                      },
                      { "text": "animation-iteration-count", "pairId": 4 },
                      {
                        "text": "Define quantas vezes a animação será repetida",
                        "pairId": 4
                      }
                    ]
                  },
                  {
                    "text": "Para criar uma animação de desvanecimento de um elemento, qual propriedade você deve animar?",
                    "type": "COMPLETE_THE_SENTENCE",
                    "correctAnswer": "opacity",
                    "answers": [
                      { "text": "opacity" },
                      { "text": "visibility" },
                      { "text": "background-color" },
                      { "text": "border" }
                    ]
                  },
                  {
                    "text": "A propriedade 'animation-delay' é usada para __________.",
                    "type": "COMPLETE_THE_SENTENCE",
                    "correctAnswer": "definir um atraso antes do início da animação",
                    "answers": [
                      {
                        "text": "definir um atraso antes do início da animação"
                      },
                      { "text": "alterar a velocidade da animação" },
                      { "text": "ajustar o tempo de repetição da animação" },
                      { "text": "ajustar a direção da animação" }
                    ]
                  },
                  {
                    "text": "A propriedade 'animation-iteration-count' no CSS define o número de vezes que uma animação será repetida. Ela pode ser definida como um número ou como 'infinite' para repetições indefinidas.",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "Verdadeiro",
                    "answers": [{ "text": "Verdadeiro" }, { "text": "Falso" }]
                  },
                  {
                    "text": "A animação 'bounce' em CSS faz o elemento __________.",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "pular repetidamente",
                    "answers": [
                      { "text": "pular repetidamente" },
                      { "text": "desaparecer" },
                      { "text": "mover-se para a esquerda" },
                      { "text": "girar" }
                    ]
                  },
                  {
                    "text": "É possível criar animações em CSS com mais de um 'keyframe'.",
                    "type": "TRUE_FALSE",
                    "correctAnswer": "Verdadeiro",
                    "answers": [{ "text": "Verdadeiro" }, { "text": "Falso" }]
                  }
                ]
              },
              {
                "name": "Gradientes e Sombras",
                "questions": [
                  {
                    "text": "Qual propriedade CSS é usada para aplicar um gradiente linear como fundo?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "background-image",
                    "answers": [
                      { "text": "background-image" },
                      { "text": "background-color" },
                      { "text": "box-shadow" },
                      { "text": "linear-gradient" }
                    ]
                  },
                  {
                    "text": "Associe a propriedade CSS com seu efeito correspondente.",
                    "type": "MATCH_PAIRS",
                    "answers": [
                      { "text": "box-shadow", "pairId": 1 },
                      {
                        "text": "Aplica sombra ao redor de um elemento",
                        "pairId": 1
                      },
                      { "text": "text-shadow", "pairId": 2 },
                      { "text": "Aplica sombra ao texto", "pairId": 2 },
                      { "text": "background-image", "pairId": 3 },
                      { "text": "Aplica uma imagem de fundo", "pairId": 3 },
                      { "text": "linear-gradient", "pairId": 4 },
                      {
                        "text": "Cria uma transição de cores no fundo",
                        "pairId": 4
                      }
                    ]
                  },
                  {
                    "text": "Qual valor você deve usar para criar uma sombra com um desfoque de 5px?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "5px",
                    "answers": [
                      { "text": "5px" },
                      { "text": "0px" },
                      { "text": "10px" },
                      { "text": "15px" }
                    ]
                  },
                  {
                    "text": "Complete a frase: O gradiente 'linear-gradient' é usado para __________.",
                    "type": "COMPLETE_THE_SENTENCE",
                    "correctAnswer": "criar transições suaves de cores",
                    "answers": [
                      { "text": "criar transições suaves de cores" },
                      { "text": "criar bordas arredondadas" },
                      { "text": "definir o tamanho de fontes" },
                      { "text": "criar sombreamento" }
                    ]
                  },
                  {
                    "text": "Qual é a função do 'box-shadow' no CSS?",
                    "type": "COMPLETE_THE_SENTENCE",
                    "correctAnswer": "adicionar uma sombra ao redor de um elemento",
                    "answers": [
                      {
                        "text": "adicionar uma sombra ao redor de um elemento"
                      },
                      {
                        "text": "definir uma borda sólida ao redor do elemento"
                      },
                      { "text": "alterar a cor do fundo do elemento" },
                      { "text": "ajustar a transparência do elemento" }
                    ]
                  },
                  {
                    "text": "O gradiente radial no CSS cria um efeito __________.",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "em forma de círculo",
                    "answers": [
                      { "text": "em forma de círculo" },
                      { "text": "em linha reta" },
                      { "text": "em forma de quadrado" },
                      { "text": "em forma de triângulo" }
                    ]
                  },
                  {
                    "text": "A propriedade 'text-shadow' pode ser usada para adicionar uma sombra __________.",
                    "type": "TRUE_FALSE",
                    "correctAnswer": "Verdadeiro",
                    "answers": [{ "text": "Verdadeiro" }, { "text": "Falso" }]
                  },
                  {
                    "text": "A cor das sombras no 'box-shadow' pode ser definida usando valores de hexadecimal.",
                    "type": "TRUE_FALSE",
                    "correctAnswer": "Verdadeiro",
                    "answers": [{ "text": "Verdadeiro" }, { "text": "Falso" }]
                  }
                ]
              },
              {
                "name": "Transições CSS",
                "questions": [
                  {
                    "text": "Qual propriedade CSS define a duração de uma transição?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "transition-duration",
                    "answers": [
                      { "text": "transition-duration" },
                      { "text": "transition-delay" },
                      { "text": "animation-duration" },
                      { "text": "transition-property" }
                    ]
                  },
                  {
                    "text": "Associe a propriedade CSS com seu efeito correspondente.",
                    "type": "MATCH_PAIRS",
                    "answers": [
                      { "text": "transition-duration", "pairId": 1 },
                      { "text": "Define o tempo de transição", "pairId": 1 },
                      { "text": "transition-timing-function", "pairId": 2 },
                      {
                        "text": "Define o tipo de aceleração da transição",
                        "pairId": 2
                      },
                      { "text": "transition-property", "pairId": 3 },
                      {
                        "text": "Define quais propriedades serão animadas",
                        "pairId": 3
                      },
                      { "text": "transition-delay", "pairId": 4 },
                      {
                        "text": "Define o atraso antes de iniciar a transição",
                        "pairId": 4
                      }
                    ]
                  },
                  {
                    "text": "Qual é o valor padrão da propriedade 'transition-timing-function'?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "ease",
                    "answers": [
                      { "text": "ease" },
                      { "text": "linear" },
                      { "text": "ease-in" },
                      { "text": "ease-out" }
                    ]
                  },
                  {
                    "text": "Para fazer uma transição entre duas cores, você deve usar a propriedade __________.",
                    "type": "COMPLETE_THE_SENTENCE",
                    "correctAnswer": "background-color",
                    "answers": [
                      { "text": "background-color" },
                      { "text": "color" },
                      { "text": "border-color" },
                      { "text": "text-color" }
                    ]
                  },
                  {
                    "text": "Qual propriedade pode ser usada para animar a opacidade de um elemento?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "opacity",
                    "answers": [
                      { "text": "opacity" },
                      { "text": "visibility" },
                      { "text": "display" },
                      { "text": "z-index" }
                    ]
                  },
                  {
                    "text": "É possível aplicar transições de uma única propriedade ou de várias ao mesmo tempo?",
                    "type": "TRUE_FALSE",
                    "correctAnswer": "Verdadeiro",
                    "answers": [{ "text": "Verdadeiro" }, { "text": "Falso" }]
                  },
                  {
                    "text": "Você pode usar transições em propriedades como 'height' e 'width'?",
                    "type": "TRUE_FALSE",
                    "correctAnswer": "Verdadeiro",
                    "answers": [{ "text": "Verdadeiro" }, { "text": "Falso" }]
                  },
                  {
                    "text": "A transição 'ease' tem aceleração __________ no início e no final.",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "suave",
                    "answers": [
                      { "text": "suave" },
                      { "text": "rápida" },
                      { "text": "linear" },
                      { "text": "gradual" }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "name": "Tipografia e Acessibilidade",
            "slug": "tipografia-e-acessibilidade",
            "description": "Aprenda a usar tipografia no CSS para melhorar a legibilidade e acessibilidade dos textos.",
            "lessons": [
              {
                "name": "Espaçamento e Alinhamento",
                "questions": [
                  {
                    "text": "Qual propriedade é usada para definir o espaçamento interno de um elemento?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "padding",
                    "answers": [
                      { "text": "padding" },
                      { "text": "margin" },
                      { "text": "border" },
                      { "text": "spacing" }
                    ]
                  },
                  {
                    "text": "Qual propriedade controla o espaçamento externo entre os elementos?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "margin",
                    "answers": [
                      { "text": "margin" },
                      { "text": "padding" },
                      { "text": "width" },
                      { "text": "height" }
                    ]
                  },
                  {
                    "text": "Associe a propriedade CSS com seu efeito correspondente.",
                    "type": "MATCH_PAIRS",
                    "answers": [
                      { "text": "margin", "pairId": 1 },
                      {
                        "text": "Espaçamento externo de um elemento",
                        "pairId": 1
                      },
                      { "text": "padding", "pairId": 2 },
                      {
                        "text": "Espaçamento interno de um elemento",
                        "pairId": 2
                      },
                      { "text": "text-align", "pairId": 3 },
                      {
                        "text": "Alinha o conteúdo horizontalmente",
                        "pairId": 3
                      },
                      { "text": "vertical-align", "pairId": 4 },
                      { "text": "Alinha o conteúdo verticalmente", "pairId": 4 }
                    ]
                  },
                  {
                    "text": "Qual propriedade é usada para alinhar o conteúdo horizontalmente em um elemento?",
                    "type": "COMPLETE_THE_SENTENCE",
                    "correctAnswer": "text-align",
                    "answers": [
                      { "text": "text-align" },
                      { "text": "justify-content" },
                      { "text": "align-items" },
                      { "text": "vertical-align" }
                    ]
                  },
                  {
                    "text": "A propriedade 'vertical-align' é usada para alinhar o conteúdo __________.",
                    "type": "COMPLETE_THE_SENTENCE",
                    "correctAnswer": "verticalmente",
                    "answers": [
                      { "text": "verticalmente" },
                      { "text": "horizontalmente" },
                      { "text": "diagonalmente" },
                      { "text": "em linha" }
                    ]
                  },
                  {
                    "text": "A propriedade 'box-sizing' define como as dimensões de um elemento são calculadas.",
                    "type": "TRUE_FALSE",
                    "correctAnswer": "Verdadeiro",
                    "answers": [{ "text": "Verdadeiro" }, { "text": "Falso" }]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "name": "Fundamentos do JavaScript",
        "description": "Fundamentos e técnicas avançadas de JavaScript, incluindo funções e manipulação de dados.",
        "topics": [
          {
            "name": "Introdução ao JavaScript",
            "slug": "introducao-javascript",
            "lessons": [
              {
                "name": "Variáveis e Tipos de Dados",
                "questions": [
                  {
                    "text": "Qual é a maneira correta de declarar uma variável em JavaScript?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "let",
                    "answers": [
                      { "text": "let" },
                      { "text": "var" },
                      { "text": "const" },
                      { "text": "variable" }
                    ]
                  },
                  {
                    "text": "Qual tipo de dado é utilizado para armazenar um valor verdadeiro ou falso?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "boolean",
                    "answers": [
                      { "text": "boolean" },
                      { "text": "string" },
                      { "text": "number" },
                      { "text": "undefined" }
                    ]
                  },
                  {
                    "text": "Associe o tipo de dado com seu exemplo correspondente.",
                    "type": "MATCH_PAIRS",
                    "answers": [
                      { "text": "number", "pairId": 1 },
                      { "text": "10", "pairId": 1 },
                      { "text": "boolean", "pairId": 2 },
                      { "text": "true", "pairId": 2 },
                      { "text": "string", "pairId": 3 },
                      { "text": "'Olá!'", "pairId": 3 },
                      { "text": "undefined", "pairId": 4 },
                      { "text": "let x;", "pairId": 4 }
                    ]
                  },
                  {
                    "text": "O que é retornado se você tentar acessar uma variável não definida?",
                    "type": "COMPLETE_THE_SENTENCE",
                    "correctAnswer": "undefined",
                    "answers": [
                      { "text": "undefined" },
                      { "text": "null" },
                      { "text": "NaN" },
                      { "text": "erro" }
                    ]
                  },
                  {
                    "text": "Qual comando JavaScript é utilizado para exibir informações no console?",
                    "type": "COMPLETE_THE_SENTENCE",
                    "correctAnswer": "console.log()",
                    "answers": [
                      { "text": "console.log()" },
                      { "text": "alert()" },
                      { "text": "prompt()" },
                      { "text": "document.write()" }
                    ]
                  },
                  {
                    "text": "O tipo de dado 'null' em JavaScript é equivalente a __________.",
                    "type": "TRUE_FALSE",
                    "correctAnswer": "Falso",
                    "answers": [{ "text": "Verdadeiro" }, { "text": "Falso" }]
                  },
                  {
                    "text": "Em JavaScript, a função parseInt() é usada para __________.",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "converter uma string para número inteiro",
                    "answers": [
                      { "text": "converter uma string para número inteiro" },
                      { "text": "adicionar números" },
                      { "text": "converter números para string" },
                      { "text": "verificar se a string é um número" }
                    ]
                  },
                  {
                    "text": "Qual é o resultado de 'typeof 42' em JavaScript?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "number",
                    "answers": [
                      { "text": "number" },
                      { "text": "string" },
                      { "text": "boolean" },
                      { "text": "undefined" }
                    ]
                  }
                ]
              },
              {
                "name": "Estruturas de Controle",
                "questions": [
                  {
                    "text": "Qual estrutura de controle em JavaScript é usada para criar loops?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "for",
                    "answers": [
                      { "text": "for" },
                      { "text": "if" },
                      { "text": "while" },
                      { "text": "switch" }
                    ]
                  },
                  {
                    "text": "O que faz a estrutura 'if' em JavaScript?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "executa um bloco de código se uma condição for verdadeira",
                    "answers": [
                      {
                        "text": "executa um bloco de código se uma condição for verdadeira"
                      },
                      { "text": "cria um loop de repetição" },
                      { "text": "compara dois valores" },
                      { "text": "exibe uma mensagem no console" }
                    ]
                  },
                  {
                    "text": "Associe a estrutura de controle ao seu uso correspondente.",
                    "type": "MATCH_PAIRS",
                    "answers": [
                      { "text": "if", "pairId": 1 },
                      {
                        "text": "Executa um bloco de código se a condição for verdadeira",
                        "pairId": 1
                      },
                      { "text": "for", "pairId": 2 },
                      {
                        "text": "Executa um loop com base em um número de repetições",
                        "pairId": 2
                      },
                      { "text": "while", "pairId": 3 },
                      {
                        "text": "Executa um loop enquanto a condição for verdadeira",
                        "pairId": 3
                      },
                      { "text": "switch", "pairId": 4 },
                      {
                        "text": "Escolhe entre várias opções baseadas em um valor",
                        "pairId": 4
                      }
                    ]
                  },
                  {
                    "text": "Qual comando JavaScript é usado para sair de um loop 'for' antes que ele termine?",
                    "type": "COMPLETE_THE_SENTENCE",
                    "correctAnswer": "break",
                    "answers": [
                      { "text": "break" },
                      { "text": "continue" },
                      { "text": "return" },
                      { "text": "exit" }
                    ]
                  },
                  {
                    "text": "A estrutura 'else' é usada em conjunto com __________.",
                    "type": "COMPLETE_THE_SENTENCE",
                    "correctAnswer": "if",
                    "answers": [
                      { "text": "if" },
                      { "text": "switch" },
                      { "text": "for" },
                      { "text": "while" }
                    ]
                  },
                  {
                    "text": "Em um loop 'while', o loop continua enquanto a __________ for verdadeira.",
                    "type": "TRUE_FALSE",
                    "correctAnswer": "Verdadeiro",
                    "answers": [{ "text": "Verdadeiro" }, { "text": "Falso" }]
                  },
                  {
                    "text": "O comando 'continue' em um loop é usado para __________.",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "pular a iteração atual e continuar para a próxima",
                    "answers": [
                      {
                        "text": "pular a iteração atual e continuar para a próxima"
                      },
                      { "text": "sair do loop completamente" },
                      { "text": "reiniciar o loop do início" },
                      { "text": "executar o loop em paralelo" }
                    ]
                  },
                  {
                    "text": "Qual é a função do operador lógico '&&' em uma condição 'if'?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "verificar se ambas as condições são verdadeiras",
                    "answers": [
                      {
                        "text": "verificar se ambas as condições são verdadeiras"
                      },
                      { "text": "verificar se uma das condições é verdadeira" },
                      { "text": "negar uma condição" },
                      { "text": "executar o bloco de código uma vez" }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "name": "Funções e Escopo",
            "slug": "funcoes-e-escopo",
            "lessons": [
              {
                "name": "Funções Básicas",
                "questions": [
                  {
                    "text": "Qual é a maneira correta de declarar uma função em JavaScript?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "function nomeDaFuncao() {}",
                    "answers": [
                      { "text": "function nomeDaFuncao() {}" },
                      { "text": "func nomeDaFuncao() {}" },
                      { "text": "function: nomeDaFuncao() {}" },
                      { "text": "def nomeDaFuncao() {}" }
                    ]
                  },
                  {
                    "text": "Qual das alternativas a seguir representa uma função que retorna a soma de dois números?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "function soma(a, b) { return a + b; }",
                    "answers": [
                      { "text": "function soma(a, b) { return a + b; }" },
                      { "text": "function soma(a, b) { a + b; }" },
                      { "text": "let soma = (a, b) => a + b;" },
                      { "text": "function soma(a, b) { return a - b; }" }
                    ]
                  },
                  {
                    "text": "O que o seguinte código JavaScript faz? 'console.log(soma(2, 3))'",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "Exibe no console o resultado da soma de 2 e 3",
                    "answers": [
                      {
                        "text": "Exibe no console o resultado da soma de 2 e 3"
                      },
                      { "text": "Exibe no console a função soma" },
                      { "text": "Exibe no console um erro" },
                      {
                        "text": "Exibe no console o valor de soma sem os parâmetros"
                      }
                    ]
                  },
                  {
                    "text": "O que a palavra-chave 'return' faz dentro de uma função?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "Retorna um valor de uma função",
                    "answers": [
                      { "text": "Retorna um valor de uma função" },
                      { "text": "Exibe um valor no console" },
                      { "text": "Define um parâmetro da função" },
                      { "text": "Interrompe a execução de uma função" }
                    ]
                  },
                  {
                    "text": "Qual é o valor retornado por essa função: 'function test() { return 5 + 10; }'?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "15",
                    "answers": [
                      { "text": "15" },
                      { "text": "5" },
                      { "text": "10" },
                      { "text": "undefined" }
                    ]
                  },
                  {
                    "text": "O que acontece se uma função não tiver uma instrução 'return'?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "Ela retorna 'undefined' por padrão",
                    "answers": [
                      { "text": "Ela retorna 'undefined' por padrão" },
                      { "text": "Ela retorna um erro" },
                      { "text": "Ela retorna null" },
                      { "text": "Ela retorna 'null'" }
                    ]
                  },
                  {
                    "text": "Como você pode invocar uma função chamada 'mostrarMensagem()'?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "mostrarMensagem()",
                    "answers": [
                      { "text": "mostrarMensagem()" },
                      { "text": "function mostrarMensagem()" },
                      { "text": "invoke mostrarMensagem()" },
                      { "text": "call mostrarMensagem()" }
                    ]
                  },
                  {
                    "text": "O que o código abaixo faz? 'function somar(a, b) { return a + b; } somar(5, 7)'",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "Retorna 12",
                    "answers": [
                      { "text": "Retorna 12" },
                      { "text": "Retorna 57" },
                      { "text": "Retorna undefined" },
                      { "text": "Retorna erro" }
                    ]
                  }
                ]
              },
              {
                "name": "Funções Anônimas e Arrow Functions",
                "questions": [
                  {
                    "text": "Qual é a principal diferença entre uma função anônima e uma função tradicional?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "Uma função anônima não possui nome",
                    "answers": [
                      { "text": "Uma função anônima não possui nome" },
                      {
                        "text": "Uma função anônima não pode receber parâmetros"
                      },
                      {
                        "text": "Uma função anônima não pode ser chamada diretamente"
                      },
                      {
                        "text": "Uma função anônima não pode ser utilizada dentro de outras funções"
                      }
                    ]
                  },
                  {
                    "text": "Como declarar uma função anônima que retorna a soma de dois números?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "(function(a, b) { return a + b; })",
                    "answers": [
                      { "text": "(function(a, b) { return a + b; })" },
                      { "text": "function(a, b) { return a + b; }" },
                      { "text": "(a, b) => { return a + b; }" },
                      { "text": "(function(a, b) => { return a + b; })" }
                    ]
                  },
                  {
                    "text": "Como você escreve uma Arrow Function para multiplicar dois números?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "(a, b) => a * b",
                    "answers": [
                      { "text": "(a, b) => a * b" },
                      { "text": "function(a, b) { return a * b; }" },
                      { "text": "(a, b) => { return a * b; }" },
                      { "text": "(a, b) => { a * b }" }
                    ]
                  },
                  {
                    "text": "Qual é o comportamento de 'this' dentro de uma Arrow Function?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "'this' é lexical, ou seja, é herdado do contexto externo",
                    "answers": [
                      {
                        "text": "'this' é lexical, ou seja, é herdado do contexto externo"
                      },
                      {
                        "text": "'this' aponta para o objeto que invoca a função"
                      },
                      { "text": "'this' é undefined em Arrow Functions" },
                      { "text": "'this' é o próprio objeto da função" }
                    ]
                  },
                  {
                    "text": "Qual é o valor de 'sum' após executar o código: 'let sum = (x, y) => x + y; sum(2, 3)'?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "5",
                    "answers": [
                      { "text": "5" },
                      { "text": "2" },
                      { "text": "3" },
                      { "text": "undefined" }
                    ]
                  },
                  {
                    "text": "Como você invoca uma função anônima imediatamente após sua declaração?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "(function() { /* código */ })()",
                    "answers": [
                      { "text": "(function() { /* código */ })()" },
                      { "text": "function() { /* código */ }()" },
                      { "text": "(function() { /* código */ })" },
                      { "text": "(function() { /* código */ });" }
                    ]
                  },
                  {
                    "text": "Como as Arrow Functions lidam com o contexto de 'this'?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "Elas herdam o 'this' do contexto onde foram criadas",
                    "answers": [
                      {
                        "text": "Elas herdam o 'this' do contexto onde foram criadas"
                      },
                      { "text": "'this' é redefinido em Arrow Functions" },
                      { "text": "'this' sempre aponta para o objeto global" },
                      {
                        "text": "'this' é undefined dentro das Arrow Functions"
                      }
                    ]
                  },
                  {
                    "text": "Qual é a sintaxe correta para uma função anônima de uma linha em JavaScript?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "(a, b) => a + b",
                    "answers": [
                      { "text": "(a, b) => a + b" },
                      { "text": "(a, b) => { return a + b }" },
                      { "text": "function(a, b) { return a + b }" },
                      { "text": "(function(a, b) { return a + b })" }
                    ]
                  }
                ]
              },
              {
                "name": "Parâmetros e Retorno de Funções",
                "questions": [
                  {
                    "text": "Qual é a maneira correta de definir um parâmetro em uma função?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "function nomeDaFuncao(parametro) {}",
                    "answers": [
                      { "text": "function nomeDaFuncao(parametro) {}" },
                      { "text": "function nomeDaFuncao{parametro} {}" },
                      { "text": "nomeDaFuncao(parametro) {}" },
                      { "text": "parametro => function nomeDaFuncao {}" }
                    ]
                  },
                  {
                    "text": "Como você pode retornar múltiplos valores em JavaScript?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "Usando um objeto ou um array",
                    "answers": [
                      { "text": "Usando um objeto ou um array" },
                      { "text": "Com o comando 'return' múltiplas vezes" },
                      { "text": "Apenas retornando o primeiro valor" },
                      { "text": "Usando variáveis globais" }
                    ]
                  },
                  {
                    "text": "Qual é o resultado do código 'function somar(a, b = 5) { return a + b; } somar(10)'?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "15",
                    "answers": [
                      { "text": "15" },
                      { "text": "10" },
                      { "text": "undefined" },
                      { "text": "NaN" }
                    ]
                  },
                  {
                    "text": "O que acontece se você tentar acessar um parâmetro que não foi passado para a função?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "O parâmetro terá o valor 'undefined'",
                    "answers": [
                      { "text": "O parâmetro terá o valor 'undefined'" },
                      { "text": "A função retorna erro" },
                      { "text": "A função retorna 'null'" },
                      { "text": "A função retorna um valor padrão" }
                    ]
                  },
                  {
                    "text": "Qual das opções é um exemplo de uma função que retorna um valor?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "function soma(a, b) { return a + b; }",
                    "answers": [
                      { "text": "function soma(a, b) { return a + b; }" },
                      { "text": "function soma(a, b) { console.log(a + b); }" },
                      { "text": "let soma = (a, b) => { a + b; }" },
                      { "text": "let soma = (a, b) => { return; }" }
                    ]
                  },
                  {
                    "text": "Em JavaScript, o valor 'undefined' é retornado quando __________.",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "Uma função não possui um retorno explícito",
                    "answers": [
                      { "text": "Uma função não possui um retorno explícito" },
                      { "text": "Uma função retorna null" },
                      {
                        "text": "Uma função retorna 'undefined' como valor padrão"
                      },
                      { "text": "Uma função retorna 0" }
                    ]
                  },
                  {
                    "text": "Como você pode passar uma função como argumento para outra função?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "A função é passada como referência",
                    "answers": [
                      { "text": "A função é passada como referência" },
                      { "text": "A função é chamada dentro da outra função" },
                      { "text": "A função precisa ser convertida em string" },
                      { "text": "A função é executada imediatamente" }
                    ]
                  },
                  {
                    "text": "Qual é a maneira correta de passar um número de parâmetros para uma função?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "Você pode passar qualquer número de parâmetros",
                    "answers": [
                      {
                        "text": "Você pode passar qualquer número de parâmetros"
                      },
                      { "text": "Você precisa passar apenas um parâmetro" },
                      { "text": "Você pode passar apenas dois parâmetros" },
                      {
                        "text": "Você precisa declarar todos os parâmetros antes de chamar a função"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "name": "Objetos e Arrays",
            "slug": "objetos-e-arrays",
            "lessons": [
              {
                "name": "Manipulação de Objetos",
                "questions": [
                  {
                    "text": "Qual método é usado para adicionar uma nova propriedade a um objeto?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "objeto.nomePropriedade = valor",
                    "answers": [
                      { "text": "objeto.nomePropriedade = valor" },
                      { "text": "objeto.push('propriedade', valor)" },
                      { "text": "objeto.add('propriedade', valor)" },
                      { "text": "objeto.set('propriedade', valor)" }
                    ]
                  },
                  {
                    "text": "O que a função Object.keys() retorna?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "Uma lista das chaves de um objeto",
                    "answers": [
                      { "text": "Uma lista das chaves de um objeto" },
                      { "text": "Uma lista dos valores de um objeto" },
                      { "text": "O número de propriedades de um objeto" },
                      { "text": "Uma string contendo todas as propriedades" }
                    ]
                  },
                  {
                    "text": "Associe o método ao seu uso correspondente.",
                    "type": "MATCH_PAIRS",
                    "answers": [
                      { "text": "Object.keys()", "pairId": 1 },
                      {
                        "text": "Retorna um array com as chaves do objeto",
                        "pairId": 1
                      },
                      { "text": "Object.values()", "pairId": 2 },
                      {
                        "text": "Retorna um array com os valores do objeto",
                        "pairId": 2
                      },
                      { "text": "Object.entries()", "pairId": 3 },
                      {
                        "text": "Retorna um array com [chave, valor]",
                        "pairId": 3
                      },
                      { "text": "Object.assign()", "pairId": 4 },
                      {
                        "text": "Copia as propriedades de um ou mais objetos",
                        "pairId": 4
                      }
                    ]
                  },
                  {
                    "text": "Qual é o valor de 'obj['chave']' quando 'obj' é { chave: 10 }?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "10",
                    "answers": [
                      { "text": "10" },
                      { "text": "undefined" },
                      { "text": "NaN" },
                      { "text": "null" }
                    ]
                  },
                  {
                    "text": "A função 'delete' é usada para __________.",
                    "type": "COMPLETE_THE_SENTENCE",
                    "correctAnswer": "remover uma propriedade de um objeto",
                    "answers": [
                      { "text": "remover uma propriedade de um objeto" },
                      { "text": "adicionar uma nova propriedade a um objeto" },
                      {
                        "text": "modificar o valor de uma propriedade existente"
                      },
                      { "text": "criar um objeto vazio" }
                    ]
                  },
                  {
                    "text": "É possível adicionar propriedades a um objeto existente após sua criação em JavaScript.",
                    "type": "TRUE_FALSE",
                    "correctAnswer": "Verdadeiro",
                    "answers": [{ "text": "Verdadeiro" }, { "text": "Falso" }]
                  }
                ]
              },
              {
                "name": "Arrays e Métodos de Arrays",
                "questions": [
                  {
                    "text": "Qual método é usado para adicionar um elemento ao final de um array?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "push()",
                    "answers": [
                      { "text": "push()" },
                      { "text": "pop()" },
                      { "text": "unshift()" },
                      { "text": "shift()" }
                    ]
                  },
                  {
                    "text": "Qual é o valor retornado pelo método 'arr.pop()'?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "O último elemento do array",
                    "answers": [
                      { "text": "O último elemento do array" },
                      { "text": "O primeiro elemento do array" },
                      { "text": "undefined" },
                      { "text": "O array vazio" }
                    ]
                  },
                  {
                    "text": "Associe o método ao seu uso correspondente.",
                    "type": "MATCH_PAIRS",
                    "answers": [
                      { "text": "push()", "pairId": 1 },
                      {
                        "text": "Adiciona um elemento ao final do array",
                        "pairId": 1
                      },
                      { "text": "pop()", "pairId": 2 },
                      {
                        "text": "Remove o último elemento do array",
                        "pairId": 2
                      },
                      { "text": "shift()", "pairId": 3 },
                      {
                        "text": "Remove o primeiro elemento do array",
                        "pairId": 3
                      },
                      { "text": "unshift()", "pairId": 4 },
                      {
                        "text": "Adiciona um elemento ao início do array",
                        "pairId": 4
                      }
                    ]
                  },
                  {
                    "text": "Qual é o resultado de 'arr.slice(1, 3)' em um array ['a', 'b', 'c', 'd']?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "['b', 'c']",
                    "answers": [
                      { "text": "['b', 'c']" },
                      { "text": "['a', 'b', 'c']" },
                      { "text": "['b', 'c', 'd']" },
                      { "text": "['a', 'd']" }
                    ]
                  },
                  {
                    "text": "O método 'arr.indexOf(value)' retorna __________.",
                    "type": "COMPLETE_THE_SENTENCE",
                    "correctAnswer": "o índice do valor no array",
                    "answers": [
                      { "text": "o índice do valor no array" },
                      { "text": "true se o valor estiver no array" },
                      { "text": "o valor do item no índice especificado" },
                      { "text": "um array com todos os elementos" }
                    ]
                  },
                  {
                    "text": "O método 'arr.concat()' é usado para __________.",
                    "type": "TRUE_FALSE",
                    "correctAnswer": "Verdadeiro",
                    "answers": [{ "text": "Verdadeiro" }, { "text": "Falso" }]
                  }
                ]
              },
              {
                "name": "Desestruturação de Objetos e Arrays",
                "questions": [
                  {
                    "text": "Qual é o resultado de 'const { nome } = { nome: 'João', idade: 30 }'?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "'João'",
                    "answers": [
                      { "text": "'João'" },
                      { "text": "undefined" },
                      { "text": "'João', 30" },
                      { "text": "30" }
                    ]
                  },
                  {
                    "text": "A desestruturação de arrays permite acessar os elementos de um array diretamente nas variáveis.",
                    "type": "TRUE_FALSE",
                    "correctAnswer": "Verdadeiro",
                    "answers": [{ "text": "Verdadeiro" }, { "text": "Falso" }]
                  },
                  {
                    "text": "Associe a desestruturação de objetos ao código correto.",
                    "type": "MATCH_PAIRS",
                    "answers": [
                      { "text": "const { nome } = obj", "pairId": 1 },
                      { "text": "Desestruturação de um objeto", "pairId": 1 },
                      { "text": "const [a, b] = arr", "pairId": 2 },
                      { "text": "Desestruturação de um array", "pairId": 2 }
                    ]
                  },
                  {
                    "text": "Quando a desestruturação é usada em objetos, as variáveis são nomeadas com base nas propriedades do objeto.",
                    "type": "TRUE_FALSE",
                    "correctAnswer": "Verdadeiro",
                    "answers": [{ "text": "Verdadeiro" }, { "text": "Falso" }]
                  },
                  {
                    "text": "Qual é o resultado de 'const [a, b] = [1, 2, 3]'?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "[1, 2]",
                    "answers": [
                      { "text": "[1, 2]" },
                      { "text": "[1]" },
                      { "text": "[2, 3]" },
                      { "text": "[3]" }
                    ]
                  },
                  {
                    "text": "A desestruturação pode ser usada para definir valores padrão quando uma propriedade ou índice não existe.",
                    "type": "TRUE_FALSE",
                    "correctAnswer": "Verdadeiro",
                    "answers": [{ "text": "Verdadeiro" }, { "text": "Falso" }]
                  }
                ]
              }
            ]
          },
          {
            "name": "Manipulação do DOM",
            "slug": "manipulacao-do-dom",
            "lessons": [
              {
                "name": "Seleção de Elementos DOM",
                "questions": [
                  {
                    "text": "Qual método é utilizado para selecionar um elemento pelo seu ID?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "getElementById",
                    "answers": [
                      { "text": "getElementById" },
                      { "text": "getElementsByClassName" },
                      { "text": "querySelector" },
                      { "text": "getElementsByTagName" }
                    ]
                  },
                  {
                    "text": "Qual método retorna todos os elementos de uma classe específica?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "getElementsByClassName",
                    "answers": [
                      { "text": "getElementsByClassName" },
                      { "text": "getElementById" },
                      { "text": "querySelectorAll" },
                      { "text": "getElementsByTagName" }
                    ]
                  },
                  {
                    "text": "Qual desses métodos seleciona o primeiro elemento que corresponde ao seletor CSS fornecido?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "querySelector",
                    "answers": [
                      { "text": "querySelector" },
                      { "text": "getElementById" },
                      { "text": "getElementsByClassName" },
                      { "text": "querySelectorAll" }
                    ]
                  },
                  {
                    "text": "Qual método é usado para selecionar todos os elementos que correspondem ao seletor CSS fornecido?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "querySelectorAll",
                    "answers": [
                      { "text": "querySelectorAll" },
                      { "text": "querySelector" },
                      { "text": "getElementsByTagName" },
                      { "text": "getElementById" }
                    ]
                  },
                  {
                    "text": "O método 'getElementsByTagName' seleciona elementos com base em seu __________.",
                    "type": "COMPLETE_THE_SENTENCE",
                    "correctAnswer": "nome de tag",
                    "answers": [
                      { "text": "nome de tag" },
                      { "text": "ID" },
                      { "text": "classe" },
                      { "text": "atributo" }
                    ]
                  },
                  {
                    "text": "O método 'querySelector' retorna __________.",
                    "type": "TRUE_FALSE",
                    "correctAnswer": "Verdadeiro",
                    "answers": [{ "text": "Verdadeiro" }, { "text": "Falso" }]
                  },
                  {
                    "text": "Qual método retorna uma lista de todos os elementos filhos de um elemento?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "children",
                    "answers": [
                      { "text": "children" },
                      { "text": "parentNode" },
                      { "text": "childNodes" },
                      { "text": "querySelectorAll" }
                    ]
                  },
                  {
                    "text": "Qual método seleciona o elemento pai de um elemento selecionado?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "parentNode",
                    "answers": [
                      { "text": "parentNode" },
                      { "text": "previousElementSibling" },
                      { "text": "nextElementSibling" },
                      { "text": "firstChild" }
                    ]
                  }
                ]
              },
              {
                "name": "Eventos no DOM",
                "questions": [
                  {
                    "text": "Qual método é usado para adicionar um evento a um elemento?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "addEventListener",
                    "answers": [
                      { "text": "addEventListener" },
                      { "text": "attachEvent" },
                      { "text": "setAttribute" },
                      { "text": "onclick" }
                    ]
                  },
                  {
                    "text": "Qual é o tipo de evento disparado quando um botão é clicado?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "click",
                    "answers": [
                      { "text": "click" },
                      { "text": "mousedown" },
                      { "text": "mouseover" },
                      { "text": "keydown" }
                    ]
                  },
                  {
                    "text": "Como você remove um evento que foi previamente adicionado?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "removeEventListener",
                    "answers": [
                      { "text": "removeEventListener" },
                      { "text": "detachEvent" },
                      { "text": "setAttribute" },
                      { "text": "offEvent" }
                    ]
                  },
                  {
                    "text": "Qual evento é disparado quando o mouse entra em um elemento?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "mouseenter",
                    "answers": [
                      { "text": "mouseenter" },
                      { "text": "mouseover" },
                      { "text": "mouseleave" },
                      { "text": "mouseout" }
                    ]
                  },
                  {
                    "text": "Qual evento é disparado quando uma tecla é pressionada?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "keydown",
                    "answers": [
                      { "text": "keydown" },
                      { "text": "keypress" },
                      { "text": "keyup" },
                      { "text": "input" }
                    ]
                  },
                  {
                    "text": "O que significa o evento 'DOMContentLoaded'?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "O HTML foi completamente carregado e parseado, sem aguardar por estilos, imagens e subframes.",
                    "answers": [
                      {
                        "text": "O HTML foi completamente carregado e parseado, sem aguardar por estilos, imagens e subframes."
                      },
                      {
                        "text": "O DOM e todos os recursos, como imagens e vídeos, foram completamente carregados."
                      },
                      { "text": "A página foi completamente renderizada." },
                      { "text": "O JavaScript foi completamente carregado." }
                    ]
                  },
                  {
                    "text": "O que significa o evento 'submit' em um formulário?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "O formulário foi enviado.",
                    "answers": [
                      { "text": "O formulário foi enviado." },
                      { "text": "O formulário foi limpo." },
                      { "text": "A validação do formulário falhou." },
                      { "text": "O formulário foi redirecionado." }
                    ]
                  },
                  {
                    "text": "Em qual tipo de evento você pode evitar o comportamento padrão do navegador?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "event.preventDefault()",
                    "answers": [
                      { "text": "event.preventDefault()" },
                      { "text": "event.stopPropagation()" },
                      { "text": "event.preventPropagation()" },
                      { "text": "event.cancelDefault()" }
                    ]
                  }
                ]
              },
              {
                "name": "Manipulação de Conteúdo e Estilos no DOM",
                "questions": [
                  {
                    "text": "Qual propriedade do DOM é usada para alterar o conteúdo HTML de um elemento?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "innerHTML",
                    "answers": [
                      { "text": "innerHTML" },
                      { "text": "textContent" },
                      { "text": "innerText" },
                      { "text": "content" }
                    ]
                  },
                  {
                    "text": "Qual propriedade do DOM é usada para alterar o estilo de um elemento?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "style",
                    "answers": [
                      { "text": "style" },
                      { "text": "css" },
                      { "text": "setStyle" },
                      { "text": "class" }
                    ]
                  },
                  {
                    "text": "Qual método altera a cor de fundo de um elemento?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "style.backgroundColor",
                    "answers": [
                      { "text": "style.backgroundColor" },
                      { "text": "element.style.background" },
                      { "text": "setBackgroundColor" },
                      { "text": "background.color" }
                    ]
                  },
                  {
                    "text": "Qual é o método usado para alterar o texto de um elemento?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "textContent",
                    "answers": [
                      { "text": "textContent" },
                      { "text": "innerHTML" },
                      { "text": "value" },
                      { "text": "innerText" }
                    ]
                  },
                  {
                    "text": "Como você altera o conteúdo HTML de um elemento usando JavaScript?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "element.innerHTML = 'novo conteúdo'",
                    "answers": [
                      { "text": "element.innerHTML = 'novo conteúdo'" },
                      { "text": "element.innerText = 'novo conteúdo'" },
                      { "text": "element.textContent = 'novo conteúdo'" },
                      { "text": "element.content = 'novo conteúdo'" }
                    ]
                  },
                  {
                    "text": "Qual método altera a altura de um elemento?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "style.height",
                    "answers": [
                      { "text": "style.height" },
                      { "text": "setHeight" },
                      { "text": "height" },
                      { "text": "setElementHeight" }
                    ]
                  },
                  {
                    "text": "Como você altera a cor do texto de um elemento?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "style.color",
                    "answers": [
                      { "text": "style.color" },
                      { "text": "element.setColor" },
                      { "text": "element.style.fontColor" },
                      { "text": "color" }
                    ]
                  },
                  {
                    "text": "Qual é o método para adicionar uma classe CSS a um elemento?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "classList.add",
                    "answers": [
                      { "text": "classList.add" },
                      { "text": "element.className = 'nova-classe'" },
                      { "text": "element.classList.push('nova-classe')" },
                      { "text": "element.addClass('nova-classe')" }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "name": "Assincronia em JavaScript",
            "slug": "assincronia-em-javascript",
            "lessons": [
              {
                "name": "Callbacks",
                "questions": [
                  {
                    "text": "O que é um callback em JavaScript?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "Uma função passada como argumento para outra função, que é executada quando a tarefa é concluída.",
                    "answers": [
                      {
                        "text": "Uma função passada como argumento para outra função, que é executada quando a tarefa é concluída."
                      },
                      {
                        "text": "Uma função que retorna outro valor de função."
                      },
                      {
                        "text": "Uma função chamada após a execução de um loop."
                      },
                      {
                        "text": "Uma função utilizada apenas para eventos de clique."
                      }
                    ]
                  },
                  {
                    "text": "O que acontece se um callback não for passado corretamente?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "Pode resultar em um erro ou falha na execução da função.",
                    "answers": [
                      {
                        "text": "Pode resultar em um erro ou falha na execução da função."
                      },
                      { "text": "Nada acontece, a função será ignorada." },
                      { "text": "A função será chamada com valores padrão." },
                      {
                        "text": "A função será executada imediatamente sem aguardar."
                      }
                    ]
                  },
                  {
                    "text": "Qual é o principal problema associado ao uso de callbacks em JavaScript?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "Callback Hell (ou pirâmide da morte).",
                    "answers": [
                      { "text": "Callback Hell (ou pirâmide da morte)." },
                      { "text": "Problema de sobrecarga de memória." },
                      { "text": "Dificuldade de realizar chamadas paralelas." },
                      { "text": "Falta de controle sobre o escopo da função." }
                    ]
                  },
                  {
                    "text": "Como você pode evitar o Callback Hell em JavaScript?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "Usando Promises ou async/await.",
                    "answers": [
                      { "text": "Usando Promises ou async/await." },
                      { "text": "Usando callbacks recursivos." },
                      { "text": "Usando setTimeout." },
                      { "text": "Usando funções globais." }
                    ]
                  },
                  {
                    "text": "Como você pode passar argumentos para um callback?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "Passando-os como parâmetros na função de callback.",
                    "answers": [
                      {
                        "text": "Passando-os como parâmetros na função de callback."
                      },
                      { "text": "Usando a palavra-chave 'arguments'." },
                      { "text": "Através de variáveis globais." },
                      { "text": "Com a palavra-chave 'this'." }
                    ]
                  },
                  {
                    "text": "Como é possível garantir que um callback seja executado após a conclusão de uma operação assíncrona?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "Passando o callback como parâmetro para a função assíncrona.",
                    "answers": [
                      {
                        "text": "Passando o callback como parâmetro para a função assíncrona."
                      },
                      {
                        "text": "Chamando o callback diretamente no início da função."
                      },
                      { "text": "Usando setTimeout." },
                      { "text": "Executando o callback dentro de um loop." }
                    ]
                  },
                  {
                    "text": "Qual é a principal vantagem de usar callbacks?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "Permite que funções assíncronas sejam executadas de forma controlada.",
                    "answers": [
                      {
                        "text": "Permite que funções assíncronas sejam executadas de forma controlada."
                      },
                      { "text": "Melhora o desempenho do código." },
                      { "text": "Facilita a manipulação de eventos." },
                      {
                        "text": "Garantir que o código seja executado sequencialmente."
                      }
                    ]
                  },
                  {
                    "text": "Qual é a diferença entre callbacks e promessas?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "Promessas retornam um valor no futuro, enquanto callbacks são funções passadas para execução posterior.",
                    "answers": [
                      {
                        "text": "Promessas retornam um valor no futuro, enquanto callbacks são funções passadas para execução posterior."
                      },
                      {
                        "text": "Promessas são sincrônicas e callbacks assíncronos."
                      },
                      {
                        "text": "Promessas exigem tratamento de erro, enquanto callbacks não."
                      },
                      {
                        "text": "Não há diferença entre callbacks e promessas."
                      }
                    ]
                  }
                ]
              },
              {
                "name": "Promises",
                "questions": [
                  {
                    "text": "O que é uma Promise em JavaScript?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "Um objeto que representa a eventual conclusão ou falha de uma operação assíncrona.",
                    "answers": [
                      {
                        "text": "Um objeto que representa a eventual conclusão ou falha de uma operação assíncrona."
                      },
                      {
                        "text": "Uma função que retorna um valor de forma assíncrona."
                      },
                      {
                        "text": "Uma estrutura que manipula dados em paralelo."
                      },
                      { "text": "Uma função que retorna outro objeto." }
                    ]
                  },
                  {
                    "text": "Quais são os três estados possíveis de uma Promise?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "Pendente, resolvida (fulfilled) e rejeitada (rejected).",
                    "answers": [
                      {
                        "text": "Pendente, resolvida (fulfilled) e rejeitada (rejected)."
                      },
                      { "text": "Completa, falhada e processando." },
                      { "text": "Resolvendo, falhada e concluída." },
                      { "text": "Aberta, fechada e esperando." }
                    ]
                  },
                  {
                    "text": "Como você pode manipular o valor de sucesso de uma Promise?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": ".then()",
                    "answers": [
                      { "text": ".then()" },
                      { "text": ".catch()" },
                      { "text": ".finally()" },
                      { "text": ".success()" }
                    ]
                  },
                  {
                    "text": "Como você pode manipular o valor de erro de uma Promise?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": ".catch()",
                    "answers": [
                      { "text": ".catch()" },
                      { "text": ".then()" },
                      { "text": ".finally()" },
                      { "text": ".fail()" }
                    ]
                  },
                  {
                    "text": "Como você pode encadear várias Promises?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "Usando .then() para cada Promise subsequente.",
                    "answers": [
                      {
                        "text": "Usando .then() para cada Promise subsequente."
                      },
                      {
                        "text": "Chamando todas as Promises dentro de um único .catch()"
                      },
                      { "text": "Usando .finally() para todas as Promises." },
                      { "text": "Usando .parallel() para todas as Promises." }
                    ]
                  },
                  {
                    "text": "Como você pode esperar por várias Promises para serem resolvidas ao mesmo tempo?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "Usando Promise.all().",
                    "answers": [
                      { "text": "Usando Promise.all()." },
                      { "text": "Usando Promise.any()." },
                      { "text": "Usando async/await." },
                      { "text": "Usando .then() com múltiplos callbacks." }
                    ]
                  },
                  {
                    "text": "O que acontece se uma Promise for rejeitada e não houver um manipulador de erro?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "O erro será ignorado e a execução do código continuará normalmente.",
                    "answers": [
                      {
                        "text": "O erro será ignorado e a execução do código continuará normalmente."
                      },
                      {
                        "text": "Um erro será lançado e interromperá a execução do código."
                      },
                      { "text": "A Promise será resolvida automaticamente." },
                      { "text": "A Promise será chamada novamente." }
                    ]
                  },
                  {
                    "text": "O que o método .finally() faz em uma Promise?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "Executa uma ação independente do sucesso ou falha da Promise.",
                    "answers": [
                      {
                        "text": "Executa uma ação independente do sucesso ou falha da Promise."
                      },
                      { "text": "Chama a Promise novamente em caso de falha." },
                      {
                        "text": "Só é executado quando a Promise for rejeitada."
                      },
                      { "text": "Retorna um novo valor da Promise." }
                    ]
                  }
                ]
              },
              {
                "name": "async/await",
                "questions": [
                  {
                    "text": "O que é a palavra-chave 'async'?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "Usada para declarar que uma função é assíncrona e retornará uma Promise.",
                    "answers": [
                      {
                        "text": "Usada para declarar que uma função é assíncrona e retornará uma Promise."
                      },
                      {
                        "text": "Usada para indicar que uma função é síncrona."
                      },
                      { "text": "Usada para declarar uma variável." },
                      { "text": "Usada para esperar o término de uma função." }
                    ]
                  },
                  {
                    "text": "O que é a palavra-chave 'await'?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "Usada para esperar a resolução de uma Promise dentro de uma função assíncrona.",
                    "answers": [
                      {
                        "text": "Usada para esperar a resolução de uma Promise dentro de uma função assíncrona."
                      },
                      {
                        "text": "Usada para retornar o valor da Promise imediatamente."
                      },
                      { "text": "Usada para resolver um loop assíncrono." },
                      { "text": "Usada para tratar erros assíncronos." }
                    ]
                  },
                  {
                    "text": "Como você pode tratar erros em funções assíncronas com async/await?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "Usando try/catch.",
                    "answers": [
                      { "text": "Usando try/catch." },
                      { "text": "Usando .catch() após a Promise." },
                      { "text": "Usando .finally()." },
                      { "text": "Usando o método .error() da Promise." }
                    ]
                  },
                  {
                    "text": "Qual é a vantagem de usar async/await em vez de callbacks?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "Facilita a leitura do código e evita o Callback Hell.",
                    "answers": [
                      {
                        "text": "Facilita a leitura do código e evita o Callback Hell."
                      },
                      { "text": "Melhora o desempenho do código." },
                      {
                        "text": "Permite execução paralela de funções assíncronas."
                      },
                      { "text": "Não é necessário usar promessas." }
                    ]
                  },
                  {
                    "text": "Quando uma função assíncrona não retorna um valor, o que ela retorna por padrão?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "Uma Promise resolvida com valor undefined.",
                    "answers": [
                      { "text": "Uma Promise resolvida com valor undefined." },
                      { "text": "Uma Promise rejeitada." },
                      { "text": "O valor passado como argumento." },
                      { "text": "O valor null." }
                    ]
                  },
                  {
                    "text": "É possível usar async/await fora de uma função assíncrona?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "Não, deve sempre estar dentro de uma função assíncrona.",
                    "answers": [
                      {
                        "text": "Não, deve sempre estar dentro de uma função assíncrona."
                      },
                      {
                        "text": "Sim, pode ser usado fora de funções assíncronas."
                      },
                      { "text": "Sim, apenas com promessas." },
                      { "text": "Sim, sem qualquer restrição." }
                    ]
                  },
                  {
                    "text": "O que o 'await' faz se a Promise for rejeitada?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "Lança um erro que pode ser tratado com try/catch.",
                    "answers": [
                      {
                        "text": "Lança um erro que pode ser tratado com try/catch."
                      },
                      { "text": "Retorna o valor rejeitado da Promise." },
                      { "text": "Ignora o erro e continua a execução." },
                      {
                        "text": "O código não é executado e a Promise é resolvida."
                      }
                    ]
                  },
                  {
                    "text": "Qual é o comportamento de uma função assíncrona se o 'await' for usado em uma Promise que demora muito para ser resolvida?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "A execução da função será suspensa até que a Promise seja resolvida.",
                    "answers": [
                      {
                        "text": "A execução da função será suspensa até que a Promise seja resolvida."
                      },
                      {
                        "text": "A execução continua normalmente e o 'await' é ignorado."
                      },
                      { "text": "A Promise será resolvida automaticamente." },
                      { "text": "A função se tornará síncrona." }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "name": "Programação Funcional",
            "slug": "programacao-funcional",
            "lessons": [
              {
                "name": "Funções de Ordem Superior",
                "questions": [
                  {
                    "text": "O que caracteriza uma função de ordem superior?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "Uma função que recebe uma ou mais funções como argumento ou retorna uma função.",
                    "answers": [
                      {
                        "text": "Uma função que recebe uma ou mais funções como argumento ou retorna uma função."
                      },
                      { "text": "Uma função que retorna um valor literal." },
                      {
                        "text": "Uma função que executa apenas operações matemáticas."
                      },
                      { "text": "Uma função que não tem parâmetros." }
                    ]
                  },
                  {
                    "text": "Qual das alternativas é uma função de ordem superior?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "map()",
                    "answers": [
                      { "text": "map()" },
                      { "text": "forEach()" },
                      { "text": "parseInt()" },
                      { "text": "Math.random()" }
                    ]
                  },
                  {
                    "text": "Em que situação você usaria uma função de ordem superior?",
                    "type": "TRUE_FALSE",
                    "correctAnswer": "Verdadeiro",
                    "answers": [{ "text": "Verdadeiro" }, { "text": "Falso" }]
                  },
                  {
                    "text": "Associe a função de ordem superior ao seu uso correspondente.",
                    "type": "MATCH_PAIRS",
                    "answers": [
                      { "text": "filter", "pairId": 1 },
                      { "text": "Filtra elementos de um array", "pairId": 1 },
                      { "text": "map", "pairId": 2 },
                      {
                        "text": "Aplica uma função a cada elemento do array",
                        "pairId": 2
                      },
                      { "text": "reduce", "pairId": 3 },
                      {
                        "text": "Acumula um valor baseado em um array",
                        "pairId": 3
                      }
                    ]
                  },
                  {
                    "text": "A função 'forEach' é considerada uma função de ordem superior?",
                    "type": "TRUE_FALSE",
                    "correctAnswer": "Verdadeiro",
                    "answers": [{ "text": "Verdadeiro" }, { "text": "Falso" }]
                  },
                  {
                    "text": "Qual função de ordem superior é usada para combinar todos os elementos de um array em um único valor?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "reduce()",
                    "answers": [
                      { "text": "reduce()" },
                      { "text": "map()" },
                      { "text": "filter()" },
                      { "text": "find()" }
                    ]
                  },
                  {
                    "text": "É possível passar uma função de ordem superior como argumento para outra função?",
                    "type": "TRUE_FALSE",
                    "correctAnswer": "Verdadeiro",
                    "answers": [{ "text": "Verdadeiro" }, { "text": "Falso" }]
                  },
                  {
                    "text": "Qual é o resultado da execução do código abaixo? \nconst nums = [1, 2, 3]; \nconst result = nums.map(x => x * 2); \nconsole.log(result);",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "[2, 4, 6]",
                    "answers": [
                      { "text": "[2, 4, 6]" },
                      { "text": "[1, 2, 3]" },
                      { "text": "[1, 4, 9]" },
                      { "text": "[2, 3, 4]" }
                    ]
                  }
                ]
              },
              {
                "name": "Closures",
                "questions": [
                  {
                    "text": "O que é um closure em JavaScript?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "Uma função que lembra o ambiente onde foi criada, mesmo após sua execução.",
                    "answers": [
                      {
                        "text": "Uma função que lembra o ambiente onde foi criada, mesmo após sua execução."
                      },
                      {
                        "text": "Uma função que pode ser chamada fora de seu escopo."
                      },
                      {
                        "text": "Uma função que não pode acessar variáveis externas."
                      },
                      { "text": "Uma função que não retorna valor." }
                    ]
                  },
                  {
                    "text": "Qual dos exemplos abaixo é um closure?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "function outer() { let count = 0; return function inner() { count++; return count; }; }",
                    "answers": [
                      {
                        "text": "function outer() { let count = 0; return function inner() { count++; return count; }; }"
                      },
                      { "text": "function foo() { return 5; }" },
                      { "text": "const sum = (a, b) => a + b;" },
                      { "text": "function test() { let x = 10; }" }
                    ]
                  },
                  {
                    "text": "Qual é o valor retornado pela execução do código abaixo? \nconst counter = (function() { let count = 0; return function() { count++; return count; }; })(); \ncounter();",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "1",
                    "answers": [
                      { "text": "1" },
                      { "text": "0" },
                      { "text": "undefined" },
                      { "text": "NaN" }
                    ]
                  },
                  {
                    "text": "O que acontece quando você acessa uma variável de um closure fora de sua função externa?",
                    "type": "TRUE_FALSE",
                    "correctAnswer": "Falso",
                    "answers": [{ "text": "Verdadeiro" }, { "text": "Falso" }]
                  },
                  {
                    "text": "Qual a principal característica de uma função closure em relação a variáveis de seu escopo externo?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "Ela pode acessar e modificar essas variáveis.",
                    "answers": [
                      {
                        "text": "Ela pode acessar e modificar essas variáveis."
                      },
                      { "text": "Ela não pode acessar variáveis externas." },
                      { "text": "Ela pode acessar apenas variáveis globais." },
                      {
                        "text": "Ela pode acessar variáveis apenas dentro do seu próprio escopo."
                      }
                    ]
                  },
                  {
                    "text": "Qual será o valor impresso no console ao executar o código abaixo? \nfunction outer() { let x = 10; return function inner() { console.log(x); }; } \nconst closure = outer(); \nclosure();",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "10",
                    "answers": [
                      { "text": "10" },
                      { "text": "undefined" },
                      { "text": "NaN" },
                      { "text": "Erro" }
                    ]
                  },
                  {
                    "text": "O que significa dizer que uma função tem um 'closure' em JavaScript?",
                    "type": "TRUE_FALSE",
                    "correctAnswer": "Verdadeiro",
                    "answers": [{ "text": "Verdadeiro" }, { "text": "Falso" }]
                  },
                  {
                    "text": "Você pode retornar um closure de uma função?",
                    "type": "TRUE_FALSE",
                    "correctAnswer": "Verdadeiro",
                    "answers": [{ "text": "Verdadeiro" }, { "text": "Falso" }]
                  }
                ]
              },
              {
                "name": "Currying e Partial Application",
                "questions": [
                  {
                    "text": "O que é Currying?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "É o processo de transformar uma função que recebe múltiplos argumentos em uma sequência de funções que recebem um argumento por vez.",
                    "answers": [
                      {
                        "text": "É o processo de transformar uma função que recebe múltiplos argumentos em uma sequência de funções que recebem um argumento por vez."
                      },
                      {
                        "text": "É uma técnica para combinar várias funções em uma única função."
                      },
                      {
                        "text": "É uma técnica para executar funções assíncronas."
                      },
                      {
                        "text": "É o processo de transformar uma função síncrona em uma função assíncrona."
                      }
                    ]
                  },
                  {
                    "text": "Qual a principal diferença entre Currying e Partial Application?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "Currying transforma uma função, enquanto Partial Application aplica argumentos antes da execução.",
                    "answers": [
                      {
                        "text": "Currying transforma uma função, enquanto Partial Application aplica argumentos antes da execução."
                      },
                      { "text": "Não há diferença entre as duas técnicas." },
                      {
                        "text": "Currying aplica todos os argumentos de uma vez, enquanto Partial Application aplica um por vez."
                      },
                      {
                        "text": "Partial Application transforma funções, enquanto Currying aplica os argumentos."
                      }
                    ]
                  },
                  {
                    "text": "Qual o resultado do código abaixo? \nconst multiply = x => y => x * y; \nconst multiplyBy2 = multiply(2); \nconsole.log(multiplyBy2(3));",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "6",
                    "answers": [
                      { "text": "6" },
                      { "text": "5" },
                      { "text": "3" },
                      { "text": "NaN" }
                    ]
                  },
                  {
                    "text": "O que é uma função parcialmente aplicada (Partial Application)?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "É uma função em que você aplica alguns argumentos antes de executá-la completamente.",
                    "answers": [
                      {
                        "text": "É uma função em que você aplica alguns argumentos antes de executá-la completamente."
                      },
                      {
                        "text": "É uma função que pode ser chamada apenas uma vez."
                      },
                      {
                        "text": "É uma função que aceita apenas um argumento."
                      },
                      { "text": "É uma função que não retorna valor." }
                    ]
                  },
                  {
                    "text": "O que acontece se você tentar aplicar todos os argumentos em uma função que utiliza currying?",
                    "type": "TRUE_FALSE",
                    "correctAnswer": "Falso",
                    "answers": [{ "text": "Verdadeiro" }, { "text": "Falso" }]
                  },
                  {
                    "text": "Qual é o valor de 'x' após a execução do código abaixo? \nconst add = (x) => (y) => x + y; \nconst add5 = add(5); \nconsole.log(add5(10));",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "15",
                    "answers": [
                      { "text": "15" },
                      { "text": "5" },
                      { "text": "10" },
                      { "text": "NaN" }
                    ]
                  },
                  {
                    "text": "O que significa dizer que uma função foi 'curried'?",
                    "type": "TRUE_FALSE",
                    "correctAnswer": "Verdadeiro",
                    "answers": [{ "text": "Verdadeiro" }, { "text": "Falso" }]
                  },
                  {
                    "text": "É possível usar currying com funções de múltiplos argumentos?",
                    "type": "TRUE_FALSE",
                    "correctAnswer": "Verdadeiro",
                    "answers": [{ "text": "Verdadeiro" }, { "text": "Falso" }]
                  }
                ]
              }
            ]
          },
          {
            "name": "ES6+ e Novos Recursos",
            "slug": "es6-e-novos-recursos",
            "lessons": [
              {
                "name": "Let e Const",
                "questions": [
                  {
                    "text": "Qual a principal diferença entre 'let' e 'var' em JavaScript?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "'let' tem escopo de bloco, enquanto 'var' tem escopo de função",
                    "answers": [
                      {
                        "text": "'let' tem escopo de bloco, enquanto 'var' tem escopo de função"
                      },
                      { "text": "'let' é apenas uma forma abreviada de 'var'" },
                      { "text": "'let' pode ser redeclarado, mas 'var' não" },
                      {
                        "text": "'let' não pode ser reatribuído, enquanto 'var' pode"
                      }
                    ]
                  },
                  {
                    "text": "Qual é o comportamento de uma variável declarada com 'const'?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "Seu valor não pode ser alterado após a atribuição inicial",
                    "answers": [
                      {
                        "text": "Seu valor não pode ser alterado após a atribuição inicial"
                      },
                      {
                        "text": "Pode ser redeclarada em qualquer parte do código"
                      },
                      { "text": "Pode ser reatribuída, mas não redeclarada" },
                      {
                        "text": "Seu valor pode ser alterado, mas não pode ser reatribuído"
                      }
                    ]
                  },
                  {
                    "text": "Qual das opções abaixo é uma maneira correta de usar 'const' para um objeto?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "const obj = { nome: 'João' }; obj.nome = 'Pedro';",
                    "answers": [
                      {
                        "text": "const obj = { nome: 'João' }; obj.nome = 'Pedro';"
                      },
                      {
                        "text": "const obj = { nome: 'João' }; obj = { nome: 'Pedro' };"
                      },
                      {
                        "text": "const obj = { nome: 'João' }; obj.nome = 'Pedro'; const obj = {};"
                      },
                      { "text": "const obj = 'João'; obj = 'Pedro';" }
                    ]
                  },
                  {
                    "text": "Com 'let', qual é o escopo de uma variável declarada dentro de um bloco condicional?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "Ela estará disponível apenas dentro desse bloco",
                    "answers": [
                      {
                        "text": "Ela estará disponível apenas dentro desse bloco"
                      },
                      { "text": "Ela estará disponível globalmente" },
                      {
                        "text": "Ela estará disponível dentro de qualquer função no código"
                      },
                      { "text": "Ela estará disponível até o final do script" }
                    ]
                  },
                  {
                    "text": "Qual é o resultado de tentar redeclarar uma variável 'let' no mesmo escopo?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "Erro de sintaxe",
                    "answers": [
                      { "text": "Erro de sintaxe" },
                      { "text": "A variável será sobrescrita" },
                      { "text": "O valor será alterado sem problemas" },
                      {
                        "text": "Não há problema em redeclarar variáveis 'let'"
                      }
                    ]
                  },
                  {
                    "text": "O que acontece se você tenta reatribuir uma variável declarada com 'const'?",
                    "type": "TRUE_FALSE",
                    "correctAnswer": "Falso",
                    "answers": [{ "text": "Verdadeiro" }, { "text": "Falso" }]
                  }
                ]
              },
              {
                "name": "Template Literals",
                "questions": [
                  {
                    "text": "Qual é a sintaxe correta para criar uma string com interpolação em JavaScript usando Template Literals?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "`Hello, ${name}`",
                    "answers": [
                      { "text": "`Hello, ${name}`" },
                      { "text": "'Hello, ${name}'" },
                      { "text": "\"Hello, ${name}\"" },
                      { "text": "Hello, + name" }
                    ]
                  },
                  {
                    "text": "Template literals permitem o uso de que tipo de operação dentro de uma string?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "Interpolação de variáveis e expressões",
                    "answers": [
                      { "text": "Interpolação de variáveis e expressões" },
                      { "text": "Concatenação de strings apenas" },
                      { "text": "Substituição de variáveis" },
                      { "text": "Somente definição de valores literais" }
                    ]
                  },
                  {
                    "text": "Qual é a vantagem de usar Template Literals sobre strings tradicionais em JavaScript?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "Facilita a interpolação de variáveis dentro de strings",
                    "answers": [
                      {
                        "text": "Facilita a interpolação de variáveis dentro de strings"
                      },
                      { "text": "Aumenta a performance de execução do código" },
                      {
                        "text": "Elimina a necessidade de operadores aritméticos"
                      },
                      {
                        "text": "Evita a necessidade de aspas duplas ou simples"
                      }
                    ]
                  },
                  {
                    "text": "Como você pode usar Template Literals para criar uma string multilinha?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "Usando o caractere de nova linha dentro da string",
                    "answers": [
                      {
                        "text": "Usando o caractere de nova linha dentro da string"
                      },
                      { "text": "Usando o operador '+' entre as linhas" },
                      {
                        "text": "Declarando múltiplas strings e concatenando-as"
                      },
                      {
                        "text": "Não é possível criar strings multilinha com Template Literals"
                      }
                    ]
                  },
                  {
                    "text": "Qual das opções abaixo mostra uma maneira correta de concatenar variáveis dentro de um Template Literal?",
                    "type": "TRUE_FALSE",
                    "correctAnswer": "Verdadeiro",
                    "answers": [{ "text": "Verdadeiro" }, { "text": "Falso" }]
                  }
                ]
              },
              {
                "name": "Módulos ES6",
                "questions": [
                  {
                    "text": "Qual palavra-chave é usada para exportar funcionalidades de um módulo ES6?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "export",
                    "answers": [
                      { "text": "export" },
                      { "text": "module" },
                      { "text": "exportar" },
                      { "text": "public" }
                    ]
                  },
                  {
                    "text": "Como você importa uma funcionalidade de outro módulo em ES6?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "import { nome } from './module'",
                    "answers": [
                      { "text": "import { nome } from './module'" },
                      { "text": "require('./module')" },
                      { "text": "import './module'" },
                      { "text": "from './module' import nome" }
                    ]
                  },
                  {
                    "text": "Se você exportar uma função com 'export default', como você deve importá-la?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "import nome from './module'",
                    "answers": [
                      { "text": "import nome from './module'" },
                      { "text": "import { nome } from './module'" },
                      { "text": "require('./module')" },
                      { "text": "import './module'" }
                    ]
                  },
                  {
                    "text": "O que acontece se você importar um módulo que não existe?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "Erro de módulo não encontrado",
                    "answers": [
                      { "text": "Erro de módulo não encontrado" },
                      { "text": "O código será ignorado" },
                      {
                        "text": "O código será executado normalmente, mas a funcionalidade não estará disponível"
                      },
                      { "text": "O código será executado sem erros" }
                    ]
                  },
                  {
                    "text": "Quais tipos de exportações podem ser feitas em um módulo ES6?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "export named, export default",
                    "answers": [
                      { "text": "export named, export default" },
                      { "text": "export only" },
                      { "text": "export static" },
                      { "text": "export de funções apenas" }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "name": "Frameworks",
        "description": "Este módulo explora os principais frameworks front-end do mercado: React, Angular e Vue. Cada tópico foca em um framework, abrangendo seus conceitos fundamentais, sintaxe, componentes, gerenciamento de estado, roteamento, e outras funcionalidades essenciais.",
        "topics": [
          {
            "name": "React",
            "slug": "react",
            "lessons": [
              {
                "name": "Introdução ao React e JSX",
                "questions": [
                  {
                    "text": "Qual é a principal característica do React?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "Componentes reutilizáveis",
                    "answers": [
                      { "text": "Componentes reutilizáveis" },
                      { "text": "Programação orientada a objetos" },
                      { "text": "Controle de fluxo de dados unidirecional" },
                      { "text": "Manipulação direta do DOM" }
                    ]
                  },
                  {
                    "text": "Associe os conceitos do React às suas descrições correspondentes.",
                    "type": "MATCH_PAIRS",
                    "answers": [
                      { "text": "JSX", "pairId": 1 },
                      {
                        "text": "Sintaxe que mistura JavaScript e HTML",
                        "pairId": 1
                      },
                      { "text": "Componentes", "pairId": 2 },
                      { "text": "Unidades reutilizáveis de UI", "pairId": 2 },
                      { "text": "Virtual DOM", "pairId": 3 },
                      {
                        "text": "Representação eficiente do DOM real",
                        "pairId": 3
                      },
                      { "text": "Props", "pairId": 4 },
                      {
                        "text": "Propriedades passadas para componentes",
                        "pairId": 4
                      }
                    ]
                  },
                  {
                    "text": "Ordene os passos para criar um componente funcional no React.",
                    "type": "ORDER_CORRECTLY",
                    "answers": [
                      { "text": "Escreva a função do componente", "order": 1 },
                      { "text": "Retorne o JSX", "order": 2 },
                      { "text": "Implemente o componente no JSX", "order": 3 },
                      { "text": "Importe o React", "order": 4 }
                    ]
                  },
                  {
                    "text": "Qual abaixo está errado?",
                    "type": "IDENTIFY_ERROR",
                    "correctAnswer": "React.createElement('div')",
                    "answers": [
                      { "text": "React.createElement('div')" },
                      { "text": "<div></div>" },
                      { "text": "createElement('div')" }
                    ]
                  },
                  {
                    "text": "JSX é uma forma de escrever HTML dentro do JavaScript. Essa afirmação é:.",
                    "type": "COMPLETE_THE_SENTENCE",
                    "correctAnswer": "Verdadeiro",
                    "answers": [{ "text": "Verdadeiro" }, { "text": "Falso" }]
                  },
                  {
                    "text": "O que acontece se você tentar retornar múltiplos elementos no JSX sem um contêiner?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "Você receberá um erro de sintaxe",
                    "answers": [
                      { "text": "Você receberá um erro de sintaxe" },
                      { "text": "Os elementos serão renderizados normalmente" },
                      { "text": "A renderização será ignorada" },
                      { "text": "Os elementos se sobreporão" }
                    ]
                  },
                  {
                    "text": "Assinale a alternativa que apresenta uma característica do React.",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "Unidirecionalidade do fluxo de dados",
                    "answers": [
                      { "text": "Unidirecionalidade do fluxo de dados" },
                      { "text": "Bidirecionalidade do fluxo de dados" },
                      { "text": "Renderização sincrona do DOM" },
                      { "text": "Manipulação direta do DOM" }
                    ]
                  },
                  {
                    "text": "O JSX precisa ser compilado para JavaScript, mas o React permite que isso seja feito automaticamente. Essa afirmação é:.",
                    "type": "TRUE_FALSE",
                    "correctAnswer": "Verdadeiro",
                    "answers": [{ "text": "Verdadeiro" }, { "text": "Falso" }]
                  },
                  {
                    "text": "Associe o termo com a sua definição correta.",
                    "type": "MATCH_PAIRS",
                    "answers": [
                      { "text": "Componentes", "pairId": 1 },
                      { "text": "Blocos reutilizáveis de código", "pairId": 1 },
                      { "text": "JSX", "pairId": 2 },
                      {
                        "text": "Sintaxe que mistura JavaScript e HTML",
                        "pairId": 2
                      },
                      { "text": "Props", "pairId": 3 },
                      {
                        "text": "Dados passados para componentes",
                        "pairId": 3
                      },
                      { "text": "State", "pairId": 4 },
                      { "text": "Dados internos do componente", "pairId": 4 }
                    ]
                  },
                  {
                    "text": "Quando usamos JSX, precisamos importar o React no arquivo. Isso é __________.",
                    "type": "TRUE_FALSE",
                    "correctAnswer": "Verdadeiro",
                    "answers": [{ "text": "Verdadeiro" }, { "text": "Falso" }]
                  }
                ]
              },
              {
                "name": "Gerenciamento de Estado no React",
                "questions": [
                  {
                    "text": "Qual hook do React é utilizado para gerenciar o estado de um componente funcional?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "useState",
                    "answers": [
                      { "text": "useState" },
                      { "text": "useEffect" },
                      { "text": "useContext" },
                      { "text": "useReducer" }
                    ]
                  },
                  {
                    "text": "Associe os conceitos de gerenciamento de estado com as suas funções correspondentes.",
                    "type": "MATCH_PAIRS",
                    "answers": [
                      { "text": "useState", "pairId": 1 },
                      {
                        "text": "Gerencia o estado local de um componente",
                        "pairId": 1
                      },
                      { "text": "useEffect", "pairId": 2 },
                      {
                        "text": "Executa efeitos colaterais após a renderização",
                        "pairId": 2
                      },
                      { "text": "useReducer", "pairId": 3 },
                      {
                        "text": "Gerencia estados complexos ou múltiplos",
                        "pairId": 3
                      },
                      { "text": "useContext", "pairId": 4 },
                      {
                        "text": "Compartilha estado entre componentes",
                        "pairId": 4
                      }
                    ]
                  },
                  {
                    "text": "Ordene as etapas para atualizar o estado usando o `useState`.",
                    "type": "ORDER_CORRECTLY",
                    "answers": [
                      {
                        "text": "Declare uma variável de estado com `useState`",
                        "order": 1
                      },
                      {
                        "text": "Modifique o estado com a função de atualização",
                        "order": 2
                      },
                      {
                        "text": "Re-renderize o componente para refletir a mudança",
                        "order": 3
                      },
                      {
                        "text": "Use o valor do estado na renderização",
                        "order": 4
                      }
                    ]
                  },
                  {
                    "text": "Qual código abaixo está errado?",
                    "type": "IDENTIFY_ERROR",
                    "correctAnswer": "const state = useState()",
                    "answers": [
                      { "text": "const [state, setState] = useState()" },
                      { "text": "const state = useState()" },
                      { "text": "const [state] = useState()" }
                    ]
                  },
                  {
                    "text": "O React utiliza o estado para __________ a renderização dos componentes.",
                    "type": "COMPLETE_THE_SENTENCE",
                    "correctAnswer": "controlar",
                    "answers": [
                      { "text": "controlar" },
                      { "text": "evitar" },
                      { "text": "bloquear" },
                      { "text": "interromper" }
                    ]
                  },
                  {
                    "text": "O hook `useEffect` é usado para __________ no React.",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "Executar efeitos colaterais após a renderização",
                    "answers": [
                      {
                        "text": "Executar efeitos colaterais após a renderização"
                      },
                      { "text": "Declarar o estado do componente" },
                      { "text": "Gerenciar a navegação entre páginas" },
                      { "text": "Armazenar dados localmente no navegador" }
                    ]
                  },
                  {
                    "text": "Assinale a alternativa correta sobre o hook `useState`.",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "Ele retorna uma variável de estado e uma função para atualizar esse estado.",
                    "answers": [
                      {
                        "text": "Ele retorna uma variável de estado e uma função para atualizar esse estado."
                      },
                      {
                        "text": "Ele retorna uma função para modificar o componente"
                      },
                      {
                        "text": "Ele retorna o estado e permite alterá-lo diretamente"
                      },
                      {
                        "text": "Ele permite que o estado seja compartilhado entre componentes"
                      }
                    ]
                  },
                  {
                    "text": "Quando o estado de um componente é alterado no React, o componente sempre será re-renderizado.",
                    "type": "TRUE_FALSE",
                    "correctAnswer": "Verdadeiro",
                    "answers": [{ "text": "Verdadeiro" }, { "text": "Falso" }]
                  },
                  {
                    "text": "Associe o conceito de gerenciamento de estado com seu exemplo de uso.",
                    "type": "MATCH_PAIRS",
                    "answers": [
                      { "text": "useState", "pairId": 1 },
                      { "text": "Contador de cliques", "pairId": 1 },
                      { "text": "useEffect", "pairId": 2 },
                      { "text": "Buscar dados após renderização", "pairId": 2 },
                      { "text": "useReducer", "pairId": 3 },
                      { "text": "Controle de estado complexo", "pairId": 3 },
                      { "text": "useContext", "pairId": 4 },
                      {
                        "text": "Compartilhar estado entre componentes",
                        "pairId": 4
                      }
                    ]
                  },
                  {
                    "text": "No React, o `useContext` permite acessar e compartilhar o estado entre componentes sem precisar de um gerenciador de estado externo.",
                    "type": "TRUE_FALSE",
                    "correctAnswer": "Verdadeiro",
                    "answers": [{ "text": "Verdadeiro" }, { "text": "Falso" }]
                  }
                ]
              },
              {
                "name": "Ciclo de Vida dos Componentes e Hooks",
                "questions": [
                  {
                    "text": "Qual hook é usado para executar uma ação após o componente ser montado?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "useEffect",
                    "answers": [
                      { "text": "useEffect" },
                      { "text": "useState" },
                      { "text": "useContext" },
                      { "text": "useReducer" }
                    ]
                  },
                  {
                    "text": "Associe os métodos do ciclo de vida com suas descrições.",
                    "type": "MATCH_PAIRS",
                    "answers": [
                      { "text": "componentDidMount", "pairId": 1 },
                      {
                        "text": "Executado após o componente ser montado",
                        "pairId": 1
                      },
                      { "text": "componentDidUpdate", "pairId": 2 },
                      {
                        "text": "Executado após uma atualização do componente",
                        "pairId": 2
                      },
                      { "text": "componentWillUnmount", "pairId": 3 },
                      {
                        "text": "Executado antes de o componente ser removido",
                        "pairId": 3
                      }
                    ]
                  },
                  {
                    "text": "Ordene os métodos do ciclo de vida na ordem em que ocorrem.",
                    "type": "ORDER_CORRECTLY",
                    "answers": [
                      { "text": "componentWillMount", "order": 1 },
                      { "text": "render", "order": 2 },
                      { "text": "componentDidMount", "order": 3 },
                      { "text": "componentWillUnmount", "order": 4 }
                    ]
                  },
                  {
                    "text": "Qual hook é executado quando o estado ou as props do componente mudam?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "useEffect",
                    "answers": [
                      { "text": "useEffect" },
                      { "text": "useContext" },
                      { "text": "useState" },
                      { "text": "useRef" }
                    ]
                  },
                  {
                    "text": "Qual código abaixo está incorreto?",
                    "type": "IDENTIFY_ERROR",
                    "correctAnswer": "if (someCondition) { const [count, setCount] = useState(0); }",
                    "answers": [
                      {
                        "text": "const [count, setCount] = useState(0);"
                      },
                      {
                        "text": "if (someCondition) { const [count, setCount] = useState(0); }"
                      },
                      {
                        "text": "const [count, setCount] = useState(0); // Correto"
                      },
                      {
                        "text": "const [name, setName] = useState('');"
                      }
                    ]
                  },
                  {
                    "text": "O hook `useEffect` pode ser usado para simular o comportamento de quais métodos do ciclo de vida?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "componentDidMount, componentDidUpdate e componentWillUnmount",
                    "answers": [
                      {
                        "text": "componentDidMount, componentDidUpdate e componentWillUnmount"
                      },
                      { "text": "componentWillMount e render" },
                      { "text": "componentWillUnmount" },
                      { "text": "render e componentDidMount" }
                    ]
                  },
                  {
                    "text": "O hook `useRef` pode ser utilizado para __________.",
                    "type": "COMPLETE_THE_SENTENCE",
                    "correctAnswer": "manter referências a elementos DOM ou valores mutáveis",
                    "answers": [
                      {
                        "text": "manter referências a elementos DOM ou valores mutáveis"
                      },
                      { "text": "gerenciar o estado de um componente" },
                      { "text": "armazenar dados de forma persistente" },
                      { "text": "executar efeitos colaterais" }
                    ]
                  },
                  {
                    "text": "O hook `useState` permite que o estado de um componente seja persistido entre renders.",
                    "type": "TRUE_FALSE",
                    "correctAnswer": "Verdadeiro",
                    "answers": [{ "text": "Verdadeiro" }, { "text": "Falso" }]
                  },
                  {
                    "text": "O método `componentDidMount` é chamado quando o componente é montado pela primeira vez.",
                    "type": "TRUE_FALSE",
                    "correctAnswer": "Verdadeiro",
                    "answers": [{ "text": "Verdadeiro" }, { "text": "Falso" }]
                  },
                  {
                    "text": "O hook `useEffect` permite que a lógica de efeitos colaterais seja declarada dentro de um componente funcional.",
                    "type": "TRUE_FALSE",
                    "correctAnswer": "Verdadeiro",
                    "answers": [{ "text": "Verdadeiro" }, { "text": "Falso" }]
                  }
                ]
              },
              {
                "name": "Roteamento no React com React Router",
                "questions": [
                  {
                    "text": "Qual componente do React Router é utilizado para definir as rotas em uma aplicação?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "Route",
                    "answers": [
                      { "text": "Link" },
                      { "text": "Route" },
                      { "text": "Switch" },
                      { "text": "Redirect" }
                    ]
                  },
                  {
                    "text": "Associe os componentes do React Router com suas funcionalidades.",
                    "type": "MATCH_PAIRS",
                    "answers": [
                      { "text": "<Route>", "pairId": 1 },
                      { "text": "Define uma rota", "pairId": 1 },
                      { "text": "<Link>", "pairId": 2 },
                      { "text": "Cria um link de navegação", "pairId": 2 },
                      { "text": "<Switch>", "pairId": 3 },
                      {
                        "text": "Renderiza a primeira rota correspondente",
                        "pairId": 3
                      },
                      { "text": "<Redirect>", "pairId": 4 },
                      {
                        "text": "Redireciona o usuário para uma nova rota",
                        "pairId": 4
                      }
                    ]
                  },
                  {
                    "text": "O <Switch> no React Router server para renderizar a primeira rota que corresponde ao URL atual",
                    "type": "TRUE_FALSE",
                    "correctAnswer": "Verdadeiro",
                    "answers": [{ "text": "Verdadeiro" }, { "text": "Falso" }]
                  },
                  {
                    "text": "Ordene as etapas para configurar o roteamento básico no React.",
                    "type": "ORDER_CORRECTLY",
                    "answers": [
                      { "text": "Instalar o React Router", "order": 1 },
                      { "text": "Importar BrowserRouter e Route", "order": 2 },
                      {
                        "text": "Definir as rotas dentro do componente <Switch>",
                        "order": 3
                      },
                      {
                        "text": "Renderizar o componente <BrowserRouter> no app",
                        "order": 4
                      }
                    ]
                  },
                  {
                    "text": "Qual código abaixo está incorreto?",
                    "type": "IDENTIFY_ERROR",
                    "correctAnswer": "const element = <Route path='/home' component={Home} />;",
                    "answers": [
                      {
                        "text": "const element = <Route path='/home' component={Home} />;"
                      },
                      {
                        "text": "const element = <Route exact path='/home' component={Home} />;"
                      },
                      {
                        "text": "const element = <Route path='/home' element={<Home />} />;"
                      },
                      {
                        "text": "const element = <Route path='/home' render={() => <Home />} />;"
                      }
                    ]
                  },
                  {
                    "text": "O componente <Redirect> do React Router é utilizado para:",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "Redirecionar o usuário para outra rota",
                    "answers": [
                      {
                        "text": "Mostrar um componente específico em uma rota"
                      },
                      { "text": "Definir um link de navegação" },
                      { "text": "Redirecionar o usuário para outra rota" },
                      { "text": "Alterar o conteúdo da URL sem mudar de rota" }
                    ]
                  },
                  {
                    "text": "Associe os tipos de navegação com suas descrições.",
                    "type": "MATCH_PAIRS",
                    "answers": [
                      { "text": "Navegação imperativa", "pairId": 1 },
                      {
                        "text": "Utiliza o método history.push() ou history.replace()",
                        "pairId": 1
                      },
                      { "text": "Navegação declarativa", "pairId": 2 },
                      {
                        "text": "Utiliza o componente <Link> para navegar",
                        "pairId": 2
                      }
                    ]
                  },
                  {
                    "text": "'exact' garante que a rota corresponda exatamente ao URL",
                    "type": "TRUE_FALSE",
                    "correctAnswer": "Verdadeiro",
                    "answers": [{ "text": "Verdadeiro" }, { "text": "Falso" }]
                  },
                  {
                    "text": "Ordene as etapas para redirecionar o usuário com <Redirect>.",
                    "type": "ORDER_CORRECTLY",
                    "answers": [
                      {
                        "text": "Defina a condição para o redirecionamento",
                        "order": 1
                      },
                      {
                        "text": "Adicione o componente <Redirect> com a propriedade to",
                        "order": 2
                      },
                      { "text": "Importe o componente <Redirect>", "order": 3 }
                    ]
                  },
                  {
                    "text": "O React Router v6 introduziu a propriedade 'element' para renderizar componentes. Qual código abaixo é o correto?",
                    "type": "IDENTIFY_ERROR",
                    "correctAnswer": "const element = <Route path='/home' element={<Home />} />;",
                    "answers": [
                      {
                        "text": "const element = <Route path='/home' component={Home} />;"
                      },
                      {
                        "text": "const element = <Route path='/home' render={() => <Home />} />;"
                      },
                      {
                        "text": "const element = <Route path='/home' element={<Home />} />;"
                      },
                      {
                        "text": "const element = <Route path='/home' component={<Home />} />;"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "Testes Básicos com Jest e React Testing Library",
                "questions": [
                  {
                    "text": "Qual função do Jest é utilizada para verificar se um componente renderiza corretamente?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "render",
                    "answers": [
                      { "text": "mount" },
                      { "text": "render" },
                      { "text": "shallow" },
                      { "text": "act" }
                    ]
                  },
                  {
                    "text": "Qual biblioteca do React é usada para interagir com o DOM em testes?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "React Testing Library",
                    "answers": [
                      { "text": "Jest" },
                      { "text": "React Testing Library" },
                      { "text": "Enzyme" },
                      { "text": "Mocha" }
                    ]
                  },
                  {
                    "text": "Associe a função com sua descrição:",
                    "type": "MATCH_PAIRS",
                    "answers": [
                      { "text": "render", "pairId": 1 },
                      {
                        "text": "Renderiza o componente no DOM",
                        "pairId": 1
                      },
                      { "text": "fireEvent", "pairId": 2 },
                      {
                        "text": "Dispara um evento em um elemento",
                        "pairId": 2
                      },
                      { "text": "screen", "pairId": 3 },
                      {
                        "text": "Permite acessar elementos no DOM renderizado",
                        "pairId": 3
                      }
                    ]
                  },
                  {
                    "text": "Ordene as etapas para realizar um teste com o React Testing Library.",
                    "type": "ORDER_CORRECTLY",
                    "answers": [
                      {
                        "text": "Importe o componente que será testado",
                        "order": 1
                      },
                      {
                        "text": "Escreva o teste utilizando 'it' ou 'test'",
                        "order": 2
                      },
                      {
                        "text": "Renderize o componente usando 'render'",
                        "order": 3
                      },
                      {
                        "text": "Realize as asserções sobre o componente",
                        "order": 4
                      }
                    ]
                  },
                  {
                    "text": "Qual código abaixo está incorreto?",
                    "type": "IDENTIFY_ERROR",
                    "correctAnswer": "expect(getByText('button')).toBeInTheDocument();",
                    "answers": [
                      {
                        "text": "expect(getByText('button')).toBeInTheDocument();"
                      },
                      {
                        "text": "expect(getByRole('button')).toBeInTheDocument();"
                      },
                      {
                        "text": "expect(getByText('button')).toHaveTextContent('button');"
                      }
                    ]
                  },
                  {
                    "text": "A função 'act()' é necessária para:",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "Garantir que todas as atualizações do estado e efeitos sejam aplicados antes de fazer as asserções.",
                    "answers": [
                      { "text": "Renderizar um componente no DOM." },
                      {
                        "text": "Garantir que todas as atualizações do estado e efeitos sejam aplicados antes de fazer as asserções."
                      },
                      { "text": "Verificar se um elemento existe no DOM." },
                      {
                        "text": "Fazer as asserções de testes em componentes renderizados."
                      }
                    ]
                  },
                  {
                    "text": "Associe o tipo de teste à sua descrição:",
                    "type": "MATCH_PAIRS",
                    "answers": [
                      { "text": "Teste de renderização", "pairId": 1 },
                      {
                        "text": "Verifica se o componente é renderizado corretamente",
                        "pairId": 1
                      },
                      { "text": "Teste de interação", "pairId": 2 },
                      {
                        "text": "Verifica se a interação com o componente funciona corretamente",
                        "pairId": 2
                      },
                      { "text": "Teste de efeito colateral", "pairId": 3 },
                      {
                        "text": "Verifica se os efeitos colaterais de uma ação são corretamente gerenciados",
                        "pairId": 3
                      }
                    ]
                  },
                  {
                    "text": "Qual código abaixo representa um teste que verifica se um botão está presente no componente?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "expect(screen.getByRole('button')).toBeInTheDocument();",
                    "answers": [
                      {
                        "text": "expect(screen.getByRole('button')).toBeInTheDocument();"
                      },
                      {
                        "text": "expect(screen.getByText('Click me')).toBeInTheDocument();"
                      },
                      {
                        "text": "expect(getByRole('button')).toBeInTheDocument();"
                      },
                      {
                        "text": "expect(getByTestId('button')).toBeInTheDocument();"
                      }
                    ]
                  },
                  {
                    "text": "Qual é o propósito do 'beforeEach' no Jest?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "Executar uma função antes de cada teste",
                    "answers": [
                      { "text": "Executar uma função antes de cada teste" },
                      {
                        "text": "Executar uma função depois de cada teste"
                      },
                      { "text": "Inicializar variáveis dentro do teste" },
                      {
                        "text": "Configurar o ambiente do React Testing Library"
                      }
                    ]
                  },
                  {
                    "text": "O <Switch> no React Router serve para renderizar a primeira rota que corresponde ao URL atual.",
                    "type": "TRUE_FALSE",
                    "correctAnswer": "Verdadeiro",
                    "answers": [{ "text": "Verdadeiro" }, { "text": "Falso" }]
                  }
                ]
              },
              {
                "name": "Estilização de Componentes no React",
                "questions": [
                  {
                    "text": "O que é usado para aplicar estilos CSS diretamente em um componente React?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "styled-components",
                    "answers": [
                      { "text": "styled-components" },
                      { "text": "className" },
                      { "text": "useStyles" },
                      { "text": "CSS Modules" }
                    ]
                  },
                  {
                    "text": "Associe os tipos de estilização com suas características:",
                    "type": "MATCH_PAIRS",
                    "answers": [
                      { "text": "Styled Components", "pairId": 1 },
                      {
                        "text": "Cria componentes com estilos integrados",
                        "pairId": 1
                      },
                      { "text": "CSS Modules", "pairId": 2 },
                      {
                        "text": "Utiliza classes locais para evitar conflitos de estilos",
                        "pairId": 2
                      },
                      { "text": "Inline Styles", "pairId": 3 },
                      {
                        "text": "Estilos definidos diretamente no componente",
                        "pairId": 3
                      }
                    ]
                  },
                  {
                    "text": "O <div> pode ser estilizado diretamente com inline styles no React.",
                    "type": "TRUE_FALSE",
                    "correctAnswer": "Verdadeiro",
                    "answers": [{ "text": "Verdadeiro" }, { "text": "Falso" }]
                  },
                  {
                    "text": "Ordene as etapas para utilizar o styled-components:",
                    "type": "ORDER_CORRECTLY",
                    "answers": [
                      {
                        "text": "Instale o pacote 'styled-components'",
                        "order": 1
                      },
                      {
                        "text": "Crie um componente utilizando a função 'styled'",
                        "order": 2
                      },
                      {
                        "text": "Use o componente estilizado no JSX",
                        "order": 3
                      }
                    ]
                  },
                  {
                    "text": "Qual código abaixo está incorreto?",
                    "type": "IDENTIFY_ERROR",
                    "correctAnswer": "const Button = styled.button`color: blue;`;",
                    "answers": [
                      { "text": "const Button = styled.button`color: blue;`;" },
                      { "text": "const Button = styled.div`color: blue;`;" },
                      {
                        "text": "const Button = styled.button({ color: 'blue' });"
                      }
                    ]
                  },
                  {
                    "text": "O React permite usar estilos inline diretamente nos componentes.",
                    "type": "TRUE_FALSE",
                    "correctAnswer": "Verdadeiro",
                    "answers": [{ "text": "Verdadeiro" }, { "text": "Falso" }]
                  },
                  {
                    "text": "Complete a frase: A principal vantagem de usar CSS Modules é __________.",
                    "type": "COMPLETE_THE_SENTENCE",
                    "correctAnswer": "evitar conflitos de nomes de classes",
                    "answers": [
                      { "text": "facilidade de manutenção" },
                      { "text": "evitar conflitos de nomes de classes" },
                      { "text": "usar variáveis dentro do CSS" },
                      { "text": "possibilidade de animações" }
                    ]
                  },
                  {
                    "text": "Com o CSS Modules, as classes CSS são globalmente acessíveis em todo o seu aplicativo.",
                    "type": "TRUE_FALSE",
                    "correctAnswer": "Falso",
                    "answers": [{ "text": "Verdadeiro" }, { "text": "Falso" }]
                  },
                  {
                    "text": "Qual dos seguintes métodos é usado para aplicar classes em um componente React?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "className",
                    "answers": [
                      { "text": "className" },
                      { "text": "id" },
                      { "text": "style" },
                      { "text": "data" }
                    ]
                  },
                  {
                    "text": "Associe as características de estilização aos seus respectivos métodos:",
                    "type": "MATCH_PAIRS",
                    "answers": [
                      { "text": "CSS Modules", "pairId": 1 },
                      {
                        "text": "Evita conflitos de nomes de classes com escopo local",
                        "pairId": 1
                      },
                      { "text": "Inline Styles", "pairId": 2 },
                      {
                        "text": "Estilos aplicados diretamente ao componente",
                        "pairId": 2
                      },
                      { "text": "Styled Components", "pairId": 3 },
                      {
                        "text": "Cria componentes com estilos embutidos",
                        "pairId": 3
                      }
                    ]
                  }
                ]
              },
              {
                "name": "Context API e Redux para Gerenciamento de Estado",
                "questions": [
                  {
                    "text": "Qual é o propósito principal do Context API no React?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "Compartilhar estado entre componentes sem passar props manualmente",
                    "answers": [
                      {
                        "text": "Gerenciar estado local em um único componente"
                      },
                      {
                        "text": "Compartilhar estado entre componentes sem passar props manualmente"
                      },
                      { "text": "Renderizar componentes com base em eventos" },
                      { "text": "Aprimorar o desempenho de componentes filhos" }
                    ]
                  },
                  {
                    "text": "Associe as características do Context API com suas descrições:",
                    "type": "MATCH_PAIRS",
                    "answers": [
                      { "text": "Context.Provider", "pairId": 1 },
                      {
                        "text": "Componente que fornece um valor para os componentes filhos",
                        "pairId": 1
                      },
                      { "text": "Context.Consumer", "pairId": 2 },
                      {
                        "text": "Componente que consome o valor do Context",
                        "pairId": 2
                      }
                    ]
                  },
                  {
                    "text": "O Redux é usado para gerenciar estado global em aplicações React.",
                    "type": "TRUE_FALSE",
                    "correctAnswer": "Verdadeiro",
                    "answers": [{ "text": "Verdadeiro" }, { "text": "Falso" }]
                  },
                  {
                    "text": "Complete a frase: Para alterar o estado global no Redux, utilizamos __________.",
                    "type": "COMPLETE_THE_SENTENCE",
                    "correctAnswer": "actions e reducers",
                    "answers": [
                      { "text": "actions e reducers" },
                      { "text": "context e providers" },
                      { "text": "dispatchers e listeners" },
                      { "text": "setters e getters" }
                    ]
                  },
                  {
                    "text": "Qual código abaixo está incorreto para utilizar Redux com um reducer?",
                    "type": "IDENTIFY_ERROR",
                    "correctAnswer": "const reducer = (state = initialState, action) => { switch(action.type) { ... } }",
                    "answers": [
                      {
                        "text": "const reducer = (state = initialState, action) => { switch(action.type) { ... } }"
                      },
                      {
                        "text": "const reducer = (state, action) => { switch(action.type) { ... } }"
                      },
                      {
                        "text": "const reducer = (state, action) => { return action.payload }"
                      }
                    ]
                  },
                  {
                    "text": "Ordene os passos para configurar o Redux em um aplicativo React.",
                    "type": "ORDER_CORRECTLY",
                    "answers": [
                      { "text": "Crie actions e reducers", "order": 1 },
                      { "text": "Configure o store", "order": 2 },
                      {
                        "text": "Envolva o aplicativo com o <Provider>",
                        "order": 3
                      },
                      {
                        "text": "Utilize o useDispatch e useSelector nos componentes",
                        "order": 4
                      }
                    ]
                  },
                  {
                    "text": "O que é a função useDispatch no Redux?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "Ela permite disparar actions para modificar o estado global",
                    "answers": [
                      {
                        "text": "Ela permite disparar actions para modificar o estado global"
                      },
                      {
                        "text": "Ela permite acessar o estado global diretamente"
                      },
                      {
                        "text": "Ela gerencia o estado local de um componente"
                      },
                      { "text": "Ela sincroniza o estado entre componentes" }
                    ]
                  },
                  {
                    "text": "Associe os conceitos de gerenciamento de estado com seus respectivos métodos:",
                    "type": "MATCH_PAIRS",
                    "answers": [
                      { "text": "useState", "pairId": 1 },
                      {
                        "text": "Gerencia o estado local dentro de um componente",
                        "pairId": 1
                      },
                      { "text": "Context API", "pairId": 2 },
                      {
                        "text": "Permite compartilhar estado entre componentes sem passar props",
                        "pairId": 2
                      },
                      { "text": "Redux", "pairId": 3 },
                      {
                        "text": "Gerencia estado global em uma aplicação",
                        "pairId": 3
                      }
                    ]
                  },
                  {
                    "text": "No Redux, o estado da aplicação é imutável, ou seja, não pode ser alterado diretamente.",
                    "type": "TRUE_FALSE",
                    "correctAnswer": "Verdadeiro",
                    "answers": [{ "text": "Verdadeiro" }, { "text": "Falso" }]
                  },
                  {
                    "text": "Complete a frase: No Redux, um reducer é responsável por __________.",
                    "type": "COMPLETE_THE_SENTENCE",
                    "correctAnswer": "modificar o estado com base nas actions recebidas",
                    "answers": [
                      {
                        "text": "modificar o estado com base nas actions recebidas"
                      },
                      { "text": "definir o estado inicial da aplicação" },
                      { "text": "chamar as funções de update do React" },
                      { "text": "monitorar as mudanças do estado global" }
                    ]
                  }
                ]
              },
              {
                "name": "Conectando React com APIs Externas",
                "questions": [
                  {
                    "text": "Qual método HTTP é comumente utilizado para buscar dados de uma API externa?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "GET",
                    "answers": [
                      { "text": "POST" },
                      { "text": "GET" },
                      { "text": "PUT" },
                      { "text": "DELETE" }
                    ]
                  },
                  {
                    "text": "Associe os métodos HTTP com suas descrições:",
                    "type": "MATCH_PAIRS",
                    "answers": [
                      { "text": "GET", "pairId": 1 },
                      { "text": "Usado para buscar dados", "pairId": 1 },
                      { "text": "POST", "pairId": 2 },
                      { "text": "Usado para enviar dados", "pairId": 2 },
                      { "text": "PUT", "pairId": 3 },
                      { "text": "Usado para atualizar dados", "pairId": 3 },
                      { "text": "DELETE", "pairId": 4 },
                      { "text": "Usado para remover dados", "pairId": 4 }
                    ]
                  },
                  {
                    "text": "O React utiliza o hook __________ para realizar requisições assíncronas.",
                    "type": "COMPLETE_THE_SENTENCE",
                    "correctAnswer": "useEffect",
                    "answers": [
                      { "text": "useEffect" },
                      { "text": "useState" },
                      { "text": "useCallback" },
                      { "text": "useContext" }
                    ]
                  },
                  {
                    "text": "Qual é a função do método 'fetch' no JavaScript?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "Realizar requisições HTTP assíncronas para obter ou enviar dados",
                    "answers": [
                      {
                        "text": "Realizar requisições HTTP assíncronas para obter ou enviar dados"
                      },
                      { "text": "Manipular o DOM diretamente" },
                      { "text": "Criar um servidor local" },
                      { "text": "Executar uma função após um atraso" }
                    ]
                  },
                  {
                    "text": "Complete a frase: Ao utilizar a função fetch no React, sempre é importante tratar a __________ para garantir a robustez da aplicação.",
                    "type": "COMPLETE_THE_SENTENCE",
                    "correctAnswer": "promessa",
                    "answers": [
                      { "text": "promessa" },
                      { "text": "resposta" },
                      { "text": "consulta" },
                      { "text": "requisição" }
                    ]
                  },
                  {
                    "text": "O que é o CORS e por que ele pode ser um problema ao conectar uma aplicação React com uma API externa?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "CORS é um mecanismo de segurança que bloqueia requisições de domínios diferentes",
                    "answers": [
                      {
                        "text": "CORS é um mecanismo de segurança que bloqueia requisições de domínios diferentes"
                      },
                      {
                        "text": "CORS é uma biblioteca que facilita a comunicação entre APIs"
                      },
                      {
                        "text": "CORS é uma extensão do navegador que permite realizar requisições assíncronas"
                      },
                      { "text": "CORS é um método HTTP usado para obter dados" }
                    ]
                  },
                  {
                    "text": "Qual código abaixo está incorreto ao utilizar 'fetch' para fazer uma requisição GET?",
                    "type": "IDENTIFY_ERROR",
                    "correctAnswer": "fetch(url, { method: 'POST' }).then(response => response.json()).then(data => console.log(data));",
                    "answers": [
                      {
                        "text": "fetch(url, { method: 'POST' }).then(response => response.json()).then(data => console.log(data));"
                      },
                      {
                        "text": "fetch(url).then(response => response.json()).then(data => console.log(data));"
                      },
                      {
                        "text": "fetch(url, { method: 'GET' }).then(response => response.json()).then(data => console.log(data));"
                      }
                    ]
                  },
                  {
                    "text": "Qual a vantagem de utilizar o axios em vez de 'fetch' para realizar requisições HTTP no React?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "O axios fornece uma API mais simples e lida melhor com erros e respostas",
                    "answers": [
                      {
                        "text": "O axios fornece uma API mais simples e lida melhor com erros e respostas"
                      },
                      { "text": "O axios é mais rápido do que o fetch" },
                      { "text": "O axios não necessita de promessas" },
                      { "text": "O axios permite apenas requisições POST" }
                    ]
                  },
                  {
                    "text": "Como você pode exibir dados de uma API externa na interface do usuário no React?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "Armazenando os dados em um estado e renderizando-os no JSX",
                    "answers": [
                      {
                        "text": "Armazenando os dados em um estado e renderizando-os no JSX"
                      },
                      {
                        "text": "Utilizando uma função de renderização no useEffect"
                      },
                      {
                        "text": "Exibindo os dados diretamente no HTML sem usar estado"
                      },
                      { "text": "Armazenando os dados em uma variável global" }
                    ]
                  },
                  {
                    "text": "Associe o ciclo de vida das requisições assíncronas no React com o uso de hooks:",
                    "type": "MATCH_PAIRS",
                    "answers": [
                      { "text": "useEffect", "pairId": 1 },
                      {
                        "text": "Utilizado para disparar requisições ao carregar o componente",
                        "pairId": 1
                      },
                      { "text": "useState", "pairId": 2 },
                      {
                        "text": "Utilizado para armazenar o resultado das requisições",
                        "pairId": 2
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "name": "Angular",
            "slug": "angular",
            "lessons": [
              {
                "name": "Introdução ao Angular",
                "questions": [
                  {
                    "text": "Qual comando é usado para criar um novo projeto Angular?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "ng new",
                    "answers": [
                      { "text": "ng new" },
                      { "text": "ng create" },
                      { "text": "ng generate" },
                      { "text": "ng init" }
                    ]
                  },
                  {
                    "text": "O que é o Angular CLI?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "É uma ferramenta de linha de comando para automação de tarefas no Angular",
                    "answers": [
                      {
                        "text": "É uma ferramenta de linha de comando para automação de tarefas no Angular"
                      },
                      {
                        "text": "É uma biblioteca para integração com APIs externas"
                      },
                      {
                        "text": "É uma versão mais simples do Angular para iniciantes"
                      },
                      { "text": "É um sistema de roteamento no Angular" }
                    ]
                  },
                  {
                    "text": "No Angular, o __________ é responsável por gerenciar a lógica de negócios e interagir com as APIs.",
                    "type": "COMPLETE_THE_SENTENCE",
                    "correctAnswer": "serviço",
                    "answers": [
                      { "text": "componente" },
                      { "text": "diretiva" },
                      { "text": "serviço" },
                      { "text": "pipe" }
                    ]
                  },
                  {
                    "text": "Qual é o papel do arquivo 'angular.json' em um projeto Angular?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "Configurar o projeto Angular, como caminhos de arquivos, opções de build e ambientes de desenvolvimento",
                    "answers": [
                      {
                        "text": "Configurar o projeto Angular, como caminhos de arquivos, opções de build e ambientes de desenvolvimento"
                      },
                      {
                        "text": "Armazenar variáveis de ambiente para o desenvolvimento"
                      },
                      { "text": "Definir as rotas do aplicativo" },
                      { "text": "Gerenciar dependências de pacotes no projeto" }
                    ]
                  },
                  {
                    "text": "Qual a principal diferença entre 'Component' e 'Directive' no Angular?",
                    "type": "TRUE_FALSE",
                    "correctAnswer": "Verdadeiro",
                    "answers": [{ "text": "Verdadeiro" }, { "text": "Falso" }]
                  },
                  {
                    "text": "Qual comando é utilizado para iniciar o servidor de desenvolvimento no Angular?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "ng serve",
                    "answers": [
                      { "text": "ng serve" },
                      { "text": "ng start" },
                      { "text": "ng build" },
                      { "text": "ng run" }
                    ]
                  },
                  {
                    "text": "Complete a frase: No Angular, o __________ é responsável por transformar os dados em uma representação visual.",
                    "type": "COMPLETE_THE_SENTENCE",
                    "correctAnswer": "componente",
                    "answers": [
                      { "text": "serviço" },
                      { "text": "pipe" },
                      { "text": "componente" },
                      { "text": "diretiva" }
                    ]
                  },
                  {
                    "text": "Associe os conceitos do Angular com sua descrição:",
                    "type": "MATCH_PAIRS",
                    "answers": [
                      { "text": "Componente", "pairId": 1 },
                      {
                        "text": "Responsável por controlar a interface do usuário",
                        "pairId": 1
                      },
                      { "text": "Diretiva", "pairId": 2 },
                      {
                        "text": "Modifica o comportamento dos elementos DOM",
                        "pairId": 2
                      },
                      { "text": "Pipe", "pairId": 3 },
                      {
                        "text": "Transforma dados para exibição no template",
                        "pairId": 3
                      }
                    ]
                  },
                  {
                    "text": "Qual é o comando utilizado para adicionar uma nova dependência ao seu projeto Angular?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "ng add",
                    "answers": [
                      { "text": "ng add" },
                      { "text": "ng install" },
                      { "text": "ng update" },
                      { "text": "ng dependency" }
                    ]
                  },
                  {
                    "text": "Qual código abaixo está incorreto?",
                    "type": "IDENTIFY_ERROR",
                    "correctAnswer": "ng install --save pacote",
                    "answers": [
                      { "text": "ng install --save pacote" },
                      { "text": "ng add pacote" },
                      { "text": "npm install pacote" }
                    ]
                  }
                ]
              },
              {
                "name": "Componentes, Diretivas e Pipes no Angular",
                "questions": [
                  {
                    "text": "Qual é o principal objetivo de um componente no Angular?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "Controlar uma parte da interface de usuário e a lógica associada",
                    "answers": [
                      {
                        "text": "Controlar uma parte da interface de usuário e a lógica associada"
                      },
                      { "text": "Manipular dados recebidos de um serviço" },
                      { "text": "Transformar dados antes de exibi-los" },
                      { "text": "Gerenciar estados globais da aplicação" }
                    ]
                  },
                  {
                    "text": "O que é uma diretiva no Angular?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "Uma classe que pode modificar o comportamento ou a aparência de elementos do DOM",
                    "answers": [
                      {
                        "text": "Uma classe que pode modificar o comportamento ou a aparência de elementos do DOM"
                      },
                      {
                        "text": "Uma classe usada para gerenciar o estado de componentes"
                      },
                      {
                        "text": "Uma classe que apenas transforma dados para exibição"
                      },
                      {
                        "text": "Uma classe usada para gerenciar dependências no projeto"
                      }
                    ]
                  },
                  {
                    "text": "Complete a frase: Um Pipe no Angular é utilizado para __________.",
                    "type": "COMPLETE_THE_SENTENCE",
                    "correctAnswer": "transformar dados para exibição no template",
                    "answers": [
                      { "text": "validar os dados antes de enviá-los" },
                      { "text": "transformar dados para exibição no template" },
                      { "text": "gerenciar as rotas da aplicação" },
                      { "text": "configurar os parâmetros do componente" }
                    ]
                  },
                  {
                    "text": "A diretiva *ngIf no Angular serve para adicionar ou remover um elemento do DOM com base em uma condição.",
                    "type": "TRUE_FALSE",
                    "correctAnswer": "Verdadeiro",
                    "answers": [{ "text": "Verdadeiro" }, { "text": "Falso" }]
                  },
                  {
                    "text": "Assinale a alternativa que corretamente cria um componente no Angular usando Angular CLI.",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "ng generate component nome-do-componente",
                    "answers": [
                      { "text": "ng generate component nome-do-componente" },
                      { "text": "ng create component nome-do-componente" },
                      { "text": "ng new component nome-do-componente" },
                      { "text": "ng add component nome-do-componente" }
                    ]
                  },
                  {
                    "text": "Complete a frase: Para criar um Pipe customizado no Angular, é necessário implementar a interface __________.",
                    "type": "COMPLETE_THE_SENTENCE",
                    "correctAnswer": "PipeTransform",
                    "answers": [
                      { "text": "PipeCustom" },
                      { "text": "PipeTransform" },
                      { "text": "DataTransform" },
                      { "text": "PipeHandler" }
                    ]
                  },
                  {
                    "text": "Associe o tipo de diretiva ao seu comportamento:",
                    "type": "MATCH_PAIRS",
                    "answers": [
                      { "text": "*ngIf", "pairId": 1 },
                      {
                        "text": "Exibe ou oculta um elemento baseado em uma condição",
                        "pairId": 1
                      },
                      { "text": "*ngFor", "pairId": 2 },
                      {
                        "text": "Cria uma lista de elementos a partir de um array",
                        "pairId": 2
                      },
                      { "text": "[ngClass]", "pairId": 3 },
                      {
                        "text": "Adiciona ou remove classes CSS dinamicamente",
                        "pairId": 3
                      }
                    ]
                  },
                  {
                    "text": "Qual a principal diferença entre diretivas estruturais e diretivas de atributos?",
                    "type": "TRUE_FALSE",
                    "correctAnswer": "Verdadeiro",
                    "answers": [{ "text": "Verdadeiro" }, { "text": "Falso" }]
                  },
                  {
                    "text": "Qual código abaixo está incorreto?",
                    "type": "IDENTIFY_ERROR",
                    "correctAnswer": "transform(value) { return value.toUpperCase(); }",
                    "answers": [
                      {
                        "text": "transform(value) { return value.toUpperCase(); }"
                      },
                      {
                        "text": "transform(value) { return value | uppercase; }"
                      },
                      {
                        "text": "transform(value) { return value.toLowerCase(); }"
                      }
                    ]
                  },
                  {
                    "text": "Ordene as etapas para criar um Pipe no Angular.",
                    "type": "ORDER_CORRECTLY",
                    "answers": [
                      {
                        "text": "Crie uma classe que implemente PipeTransform",
                        "order": 1
                      },
                      { "text": "Registre o Pipe no módulo", "order": 2 },
                      { "text": "Implemente o método transform", "order": 3 }
                    ]
                  }
                ]
              },
              {
                "name": "Gerenciamento de Estado com Serviços no Angular",
                "questions": [
                  {
                    "text": "O que é o propósito principal de um serviço no Angular?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "Fornecer uma forma centralizada de gerenciar o estado e a lógica de negócios.",
                    "answers": [
                      {
                        "text": "Fornecer uma forma centralizada de gerenciar o estado e a lógica de negócios."
                      },
                      {
                        "text": "Armazenar dados temporários durante a execução da aplicação."
                      },
                      { "text": "Definir os componentes e suas dependências." },
                      {
                        "text": "Gerenciar rotas e navegação dentro da aplicação."
                      }
                    ]
                  },
                  {
                    "text": "Associe os métodos aos serviços correspondentes:",
                    "type": "MATCH_PAIRS",
                    "answers": [
                      { "text": "ngOnInit", "pairId": 1 },
                      {
                        "text": "Inicializa o serviço no momento em que o componente é criado",
                        "pairId": 1
                      },
                      { "text": "HttpClient.get", "pairId": 2 },
                      {
                        "text": "Realiza uma requisição GET para um recurso",
                        "pairId": 2
                      },
                      { "text": "ngOnDestroy", "pairId": 3 },
                      {
                        "text": "Destrói a instância do serviço quando o componente é destruído",
                        "pairId": 3
                      }
                    ]
                  },
                  {
                    "text": "Qual é o primeiro passo para criar um serviço no Angular?",
                    "type": "ORDER_CORRECTLY",
                    "answers": [
                      {
                        "text": "Criar um arquivo de serviço com a extensão '.service.ts'",
                        "order": 1
                      },
                      {
                        "text": "Adicionar o serviço ao array 'providers' do módulo",
                        "order": 2
                      },
                      {
                        "text": "Injetar o serviço no componente ou outro serviço",
                        "order": 3
                      },
                      {
                        "text": "Definir os métodos necessários dentro do serviço",
                        "order": 4
                      }
                    ]
                  },
                  {
                    "text": "Qual código abaixo está incorreto?",
                    "type": "IDENTIFY_ERROR",
                    "correctAnswer": "this.state = this.http.get('/api/data');",
                    "answers": [
                      { "text": "this.state = this.http.get('/api/data');" },
                      { "text": "this.data = this.http.get('/api/data');" },
                      {
                        "text": "this.http.get('/api/data').subscribe(response => { this.state = response; });"
                      }
                    ]
                  },
                  {
                    "text": "Quando utilizamos o decorator @Injectable, o que estamos fazendo?",
                    "type": "TRUE_FALSE",
                    "correctAnswer": "Verdadeiro",
                    "answers": [{ "text": "Verdadeiro" }, { "text": "Falso" }]
                  },
                  {
                    "text": "O que acontece quando o estado de um serviço é alterado?",
                    "type": "TRUE_FALSE",
                    "correctAnswer": "Verdadeiro",
                    "answers": [{ "text": "Verdadeiro" }, { "text": "Falso" }]
                  },
                  {
                    "text": "No Angular, é possível compartilhar o estado entre diferentes componentes usando serviços?",
                    "type": "TRUE_FALSE",
                    "correctAnswer": "Verdadeiro",
                    "answers": [{ "text": "Verdadeiro" }, { "text": "Falso" }]
                  },
                  {
                    "text": "Complete a sentença: O Angular utiliza __________ para gerenciar as dependências dos componentes e serviços.",
                    "type": "COMPLETE_THE_SENTENCE",
                    "correctAnswer": "injeção de dependência",
                    "answers": [
                      { "text": "injeção de dependência" },
                      { "text": "mapeamento de dependências" },
                      { "text": "gerenciamento de estado" },
                      { "text": "inicialização de serviços" }
                    ]
                  },
                  {
                    "text": "Qual é a principal vantagem de usar serviços no Angular?",
                    "type": "MULTIPLE_CHOICE",
                    "correctAnswer": "Reutilização de lógica de negócios em múltiplos componentes.",
                    "answers": [
                      {
                        "text": "Reutilização de lógica de negócios em múltiplos componentes."
                      },
                      { "text": "Melhora na performance da aplicação." },
                      { "text": "Facilidade de definir estilos globais." },
                      {
                        "text": "Permite o roteamento dinâmico de componentes."
                      }
                    ]
                  },
                  {
                    "text": "Associe os métodos aos usos corretos no serviço:",
                    "type": "MATCH_PAIRS",
                    "answers": [
                      { "text": "getData", "pairId": 1 },
                      {
                        "text": "Retorna os dados solicitados por um componente",
                        "pairId": 1
                      },
                      { "text": "postData", "pairId": 2 },
                      { "text": "Envia dados para o servidor", "pairId": 2 },
                      { "text": "updateData", "pairId": 3 },
                      {
                        "text": "Atualiza os dados existentes no servidor",
                        "pairId": 3
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  }
]
